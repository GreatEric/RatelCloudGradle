<template>
  <div @drop="drop" @dragover.prevent>
    <div :style="{ padding: '24px', background: '#fff', minHeight: '360px' }">
      <a-card title="System Contacts" style="width: 100%" :bordered="false">
        <a-button-group slot="extra">
          <a-button type="primary" @click="showAddForm"><i class="iconfont iconicon-test2"/>Add </a-button>
          <a-button type="primary" @click="showEditForm"> <i class="iconfont iconicon-test2"/>Edit</a-button>
        </a-button-group>
        <a-table :columns="tbcolumns" :data-source="tbdata" :pagination="pagination" :rowKey='record=>record.id' :row-selection="{ selectedRowKeys: selectedRowKeys, onChange: onSelectChange }">
          <div slot="expandedRowRender" slot-scope="record" style="margin: 0">
            <a-row :gutter="[16,16]">
              <a-col :span="24">
                <span class="collapseColumTitle">Transaction Id:</span>{{ record.transactionId }}
              </a-col>
            </a-row>
            <a-row :gutter="[16,16]">
              <a-col :span="24">
                <span class="collapseColumTitle">Transaction Id:</span>{{ record.declineReason }}
              </a-col>
            </a-row>
          </div>
          <span slot="currency" slot-scope="currency">
            <a-tag :color="'green'">
              {{ currency.toUpperCase() }}
            </a-tag>
          </span>
          <span slot="paymentAmt" slot-scope="paymentAmt">{{ '$ '+paymentAmt }}</span>
          <span slot="paymentType" slot-scope="paymentType">
            <a-tag :color="'geekblue'">
              {{ typeEnum.getLabelByValue(paymentType) }}
            </a-tag>
          </span>
          <span slot="paymentResult" slot-scope="paymentResult">
            <a-tag :color="'geekblue'">
              {{ resultEnum.getLabelByValue(paymentResult) }}
            </a-tag>
          </span>
          <span slot="paymentTime" slot-scope="paymentTime">
            <span>{{ paymentTime }}</span>
          </span>
          <span slot="action" slot-scope="text, record">
            <a-dropdown-button type="dashed" @click="editRow(record)">
              Edit
              <a-menu slot="overlay">
                <a-popconfirm title="Are you sure？" ok-text="Yes" cancel-text="No" @confirm="disable(record.key)">
                  <a-menu-item key="1" style="padding:10px;"> <!--<a-icon type="user" />-->Disable </a-menu-item>
                </a-popconfirm>
                <a-popconfirm title="Are you sure？" ok-text="Yes" cancel-text="No" @confirm="enable(record.key)">
                  <a-menu-item key="1" style="padding:10px;"> <!--<a-icon type="user" />-->Enable </a-menu-item>
                </a-popconfirm>
              </a-menu>
            </a-dropdown-button>
        </span>
        </a-table>
      </a-card>
    </div>

    <!--新增表单-->
    <a-drawer
      title="Create a new Contact"
      :width="drawerWidth"
      :visible="showAdd"
      :body-style="{ paddingBottom: '80px' }"
      @close="closeAddForm">
      <span class="drawerLabel" :style="{right: drawerWidth+'px'}" v-if="showAdd" @dblclick="fullWidth" draggable
            @dragstart="handleDragStart($event)"
            @dragenter="handleDragEnter($event)"
            @dragover.prevent="handleDragover($event)"
            @drop="handleDrop($event)"
            @dragend="handleDragEnd($event)"></span>

      <!--<span class="drawerLabel" :style="{right: drawerWidth+'px'}" v-if="showAdd" @dblclick="fullWidth" @mousedown="drag($event)"
            @mouseup="drop($event)"></span>-->


      <a-form :form="form" layout="vertical" hide-required-mark>
        <a-row :gutter="16">
          <a-col :span="12">
            <a-form-item label="First Name">
              <a-input v-model="form.firstName" placeholder="enter first name"
              />
            </a-form-item>
          </a-col>
          <a-col :span="12">
            <a-form-item label="Last Name">
              <a-input v-model="form.lastName" placeholder="enter last name"/>
            </a-form-item>
          </a-col>
        </a-row>
        <a-row :gutter="16">
          <a-col :span="12">
            <a-form-item label="Gender">
              <a-radio-group :options="optGenger" v-model="form.gender"/>
            </a-form-item>
          </a-col>
          <a-col :span="12">
            <a-form-item label="Email">
              <a-input v-model="form.email" placeholder="enter email"/>
            </a-form-item>
          </a-col>
        </a-row>
        <a-row :gutter="16">
          <a-col :span="12">
            <a-form-item label="Crown Code">
              <a-select v-model="form.crownCode" placeholder="choose the crown code">
                <a-select-option value="61">
                  +61
                </a-select-option>
                <a-select-option value="86">
                  +86
                </a-select-option>
              </a-select>
            </a-form-item>
          </a-col>
          <a-col :span="12">
            <a-form-item label="Mobile">
              <a-input v-model="form.mobile" placeholder="enter mobile"/>
            </a-form-item>
          </a-col>
        </a-row>
      </a-form>
      <div class="drawerPanel">
        <a-button :style="{ marginRight: '8px' }" @click="closeAddForm">
          Cancel
        </a-button>
        <a-button type="primary" @click="add">
          Submit
        </a-button>
      </div>
    </a-drawer>

    <!--编辑表单-->
    <a-drawer
      title="Edit Contact"
      :width="720"
      :visible="showEdit"
      :body-style="{ paddingBottom: '80px' }"
      @close="closeEditForm">
      <a-form :form="editForm" layout="vertical" hide-required-mark>
        <a-row :gutter="16">
          <a-col :span="12">
            <a-form-item label="First Name">
              <a-input v-model="editForm.firstName" placeholder="enter first name"
              />
            </a-form-item>
          </a-col>
          <a-col :span="12">
            <a-form-item label="Last Name">
              <a-input v-model="editForm.lastName" placeholder="enter last name"/>
            </a-form-item>
          </a-col>
        </a-row>
        <a-row :gutter="16">
          <a-col :span="12">
            <a-form-item label="Gender">
              <a-radio-group :options="optGenger" v-model="editForm.gender"/>
            </a-form-item>
          </a-col>
          <a-col :span="12">
            <a-form-item label="Email">
              <a-input v-model="editForm.email" placeholder="enter email"/>
            </a-form-item>
          </a-col>
        </a-row>
        <a-row :gutter="16">
          <a-col :span="12">
            <a-form-item label="Crown Code">
              <a-select v-model="editForm.crownCode" placeholder="choose the crown code">
                <a-select-option value="61">
                  +61
                </a-select-option>
                <a-select-option value="86">
                  +86
                </a-select-option>
              </a-select>
            </a-form-item>
          </a-col>
          <a-col :span="12">
            <a-form-item label="Mobile">
              <a-input v-model="editForm.mobile" placeholder="enter mobile"/>
            </a-form-item>
          </a-col>
        </a-row>
      </a-form>
      <div class="drawerPanel">
        <a-button :style="{ marginRight: '8px' }" @click="closeEditForm">
          Cancel
        </a-button>
        <a-button type="primary" @click="edit">
          Submit
        </a-button>
      </div>
    </a-drawer>
  </div>
</template>

<script>
import columns from "../../tbcolumns/tbtransactions";
import pagination from "../../commons/pagination";
import opt_gender from "../../commons/options-gender";
import PaymentTypeEnum from "../../enums/PaymentTypeEnum";
import PaymentResultEnum from "../../enums/PaymentResultEnum";

export default {
  components: {},
  layout: 'dashboard1',
  data: () => ({
    width: 720,
    isfullWidth: false,
    tbdata:[],
    tbcolumns: columns,
    pagination: pagination,
    typeEnum: PaymentTypeEnum,
    resultEnum: PaymentResultEnum,
    selectedRowKeys: [],
    form: {
      gender:"1",
      firstName:"",
      lastName:"",
      avatar:"",
      email:"",
      mobile:"",
      crownCode:""
    },
    showAdd: false,
    showEdit: false,
    editForm:{},
    optGenger: opt_gender
  }),
  props: {
  },
  created(){
  },
  destroyed(){
  },
  mounted(){
    this.pageTransactions();
  },
  methods:{
    onSelectChange(selectedRowKeys) {
      console.log('selectedRowKeys changed: ', selectedRowKeys);
      this.selectedRowKeys = selectedRowKeys;
    },
    fullWidth(){
      this.width = document.body.clientWidth-20;
      console.log("full",document.body.clientWidth)
    },
    drag(e){
      console.log("drag",e.screenX);
    },
    drop(e){
      console.log("drop",e.screenX);
    },
    handleDragStart(e) {

    },
    handleDragEnter(e) {
      e.dataTransfer.effectAllowed = 'move';

    },
    handleDragover(e) {
      e.dataTransfer.dropEffect = 'move';
      console.log(e.screenX);
      this.width = e.screenX;
    },
    handleDrop(e, item) {
      e.dataTransfer.dropEffect = 'move';
      /*if(item === this.dragging){
        return
      }
      const newItems = [...this.divList]
      const from = newItems.indexOf(this.dragging)
      const to = newItems.indexOf(item)
      newItems[from] = item
      newItems[to] = this.dragging
      this.divList = newItems*/
    },
    // 完成元素拖动后触发
    handleDragEnd() {

    },
    drop (event) {
      console.log('drop')
      let data = event.dataTransfer.getData('item')
      this.dropData = data
      console.log('data: ', data)
    },
    login() {
      const credentials = {
        email: "admin@domain.com",
        password: "admin"
      }
      this.$apiUser.login(credentials).then((result)=>{
        console.log("登录结果:",result);
      })
    },
    add() {
      this.$apiUser.addContact(this.form).then((result)=>{
        if(result.code===1000){
          this.showAdd = false;
          this.listAllContacts();
        }
      });
    },
    edit(){
      delete this.editForm.createTime;
      delete this.editForm.updateTime;
      delete this.editForm.status;
      this.editForm.id = this.editForm.key;
      this.$apiUser.editContact(this.editForm).then((result)=>{
        if(result.code===1000){
          this.showEdit = false;
          this.listAllContacts();
        }
      });
    },
    disable(id){
      this.$apiUser.disableContact(id).then((result)=>{
        if(result.code===1000){
          this.listAllContacts();
        }
      });
      console.log("失效:",id);
    },
    enable(id){
      this.$apiUser.enableContact(id).then((result)=>{
        if(result.code===1000){
          this.listAllContacts();
        }
      });
      console.log("失效:",id);
    },
    editRow(record){
      this.editForm = record;
      this.showEdit = true;
    },
    pageTransactions(){
      const params = {
        pageNum: 1,
        pageSize: this.pagination.pageSize
      }
      this.$apiPayment.pageTransactions(params).then((result)=>{
        if(result.code===1000){
          this.tbdata = result.data.list;
          console.log(this.tbdata);

          for(let key in this.tbdata){
            let createTime = this.$moment(this.tbdata[key].createTime).format('YYYY-MM-DD h:mm:ss a');
            let timestamp = this.tbdata[key].paymentTime;
            //this.$moment.unix(this.tbdata[key].paymentTime/1000).format("YYYY-MM-DD h:mm:ss a");
            //this.$moment(this.$moment.unix(this.tbdata[key].paymentTime)).format('YYYY-MM-DD h:mm:ss a')
            //this.$moment_timezone(timestamp).utc().format("YYYY-MM-DD h:mm:ss a");
            let paymentTime = this.$moment_timezone(timestamp).tz('Australia/Melbourne').format("YYYY-MM-DD h:mm:ss a");
            this.tbdata[key].createTime = createTime;
            this.tbdata[key].paymentTime = paymentTime;
            console.log(this.tbdata[key].paymentTime);
          }
        }
      })
    },
    showAddForm() {
      this.showAdd = true;
    },
    showEditForm() {
      this.showEdit = true;
    },
    closeAddForm() {
      this.showAdd = false;
    },
    closeEditForm(){
      this.showEdit = false;
    }
  },
  computed: {
    drawerWidth () {
      return this.width;
    }
  }
}
</script>

<style lang="scss" scoped>
.drawerPanel{
  display: flex;
  flex-flow: row;
  justify-content: flex-end;
  align-items: center;
}
  .collapseColumTitle{
    margin-right: 10px;
    font-weight: 500;
  }

.ant-drawer-right.ant-drawer-open .ant-drawer-content-wrapper::after{
  content: " - Remember this";
}
</style>
