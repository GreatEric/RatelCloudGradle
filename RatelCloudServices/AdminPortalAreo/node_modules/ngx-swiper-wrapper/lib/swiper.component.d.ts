import { NgZone, ElementRef, AfterViewInit, OnDestroy, EventEmitter, ChangeDetectorRef } from '@angular/core';
import { SwiperDirective } from './swiper.directive';
import { SwiperConfigInterface } from './swiper.interfaces';
import * as ɵngcc0 from '@angular/core';
export declare class SwiperComponent implements AfterViewInit, OnDestroy {
    private zone;
    private cdRef;
    private platformId;
    private defaults;
    private mo;
    swiperConfig: any;
    paginationBackup: any;
    paginationConfig: any;
    index: number | null;
    disabled: boolean;
    performance: boolean;
    config?: SwiperConfigInterface;
    useSwiperClass: boolean;
    indexChange: EventEmitter<number>;
    swiperSlides?: ElementRef;
    directiveRef?: SwiperDirective;
    get isAtLast(): boolean;
    get isAtFirst(): boolean;
    S_INIT: EventEmitter<any>;
    S_BEFOREDESTROY: EventEmitter<any>;
    S_SCROLL: EventEmitter<any>;
    S_PROGRESS: EventEmitter<any>;
    S_KEYPRESS: EventEmitter<any>;
    S_RESIZE: EventEmitter<any>;
    S_BREAKPOINT: EventEmitter<any>;
    S_ZOOMCHANGE: EventEmitter<any>;
    S_AFTERRESIZE: EventEmitter<any>;
    S_BEFORERESIZE: EventEmitter<any>;
    S_BEFORELOOPFIX: EventEmitter<any>;
    S_LOOPFIX: EventEmitter<any>;
    S_SLIDERMOVE: EventEmitter<any>;
    S_SLIDECHANGE: EventEmitter<any>;
    S_SETTRANSLATE: EventEmitter<any>;
    S_SETTRANSITION: EventEmitter<any>;
    S_FROMEDGE: EventEmitter<any>;
    S_REACHEND: EventEmitter<any>;
    S_REACHBEGINNING: EventEmitter<any>;
    S_AUTOPLAY: EventEmitter<any>;
    S_AUTOPLAYSTART: EventEmitter<any>;
    S_AUTOPLAYSTOP: EventEmitter<any>;
    S_IMAGESREADY: EventEmitter<any>;
    S_LAZYIMAGELOAD: EventEmitter<any>;
    S_LAZYIMAGEREADY: EventEmitter<any>;
    S_SCROLLDRAGEND: EventEmitter<any>;
    S_SCROLLDRAGMOVE: EventEmitter<any>;
    S_SCROLLDRAGSTART: EventEmitter<any>;
    S_NAVIGATIONHIDE: EventEmitter<any>;
    S_NAVIGATIONSHOW: EventEmitter<any>;
    S_PAGINATIONRENDER: EventEmitter<any>;
    S_PAGINATIONUPDATE: EventEmitter<any>;
    S_PAGINATIONHIDE: EventEmitter<any>;
    S_PAGINATIONSHOW: EventEmitter<any>;
    S_TAP: EventEmitter<any>;
    S_CLICK: EventEmitter<any>;
    S_DOUBLETAP: EventEmitter<any>;
    S_TOUCHEND: EventEmitter<any>;
    S_TOUCHMOVE: EventEmitter<any>;
    S_TOUCHSTART: EventEmitter<any>;
    S_TOUCHMOVEOPPOSITE: EventEmitter<any>;
    S_TRANSITIONEND: EventEmitter<any>;
    S_TRANSITIONSTART: EventEmitter<any>;
    S_SLIDEPREVTRANSITIONEND: EventEmitter<any>;
    S_SLIDEPREVTRANSITIONSTART: EventEmitter<any>;
    S_SLIDENEXTTRANSITIONEND: EventEmitter<any>;
    S_SLIDENEXTTRANSITIONSTART: EventEmitter<any>;
    S_SLIDECHANGETRANSITIONEND: EventEmitter<any>;
    S_SLIDECHANGETRANSITIONSTART: EventEmitter<any>;
    constructor(zone: NgZone, cdRef: ChangeDetectorRef, platformId: Object, defaults: SwiperConfigInterface);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    getConfig(): SwiperConfigInterface;
    private updateClasses;
    onPaginationClick(index: number): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SwiperComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SwiperComponent, "swiper", ["ngxSwiper"], {
    "index": "index";
    "disabled": "disabled";
    "performance": "performance";
    "useSwiperClass": "useSwiperClass";
    "config": "config";
}, {
    "indexChange": "indexChange";
    "S_INIT": "init";
    "S_BEFOREDESTROY": "beforeDestroy";
    "S_SCROLL": "scroll";
    "S_PROGRESS": "progress";
    "S_KEYPRESS": "keyPress";
    "S_RESIZE": "resize";
    "S_BREAKPOINT": "breakpoint";
    "S_ZOOMCHANGE": "zoomChange";
    "S_AFTERRESIZE": "afterResize";
    "S_BEFORERESIZE": "beforeResize";
    "S_BEFORELOOPFIX": "beforeLoopFix";
    "S_LOOPFIX": "loopFix";
    "S_SLIDERMOVE": "sliderMove";
    "S_SLIDECHANGE": "slideChange";
    "S_SETTRANSLATE": "setTranslate";
    "S_SETTRANSITION": "setTransition";
    "S_FROMEDGE": "fromEdge";
    "S_REACHEND": "reachEnd";
    "S_REACHBEGINNING": "reachBeginning";
    "S_AUTOPLAY": "autoplay";
    "S_AUTOPLAYSTART": "autoplayStart";
    "S_AUTOPLAYSTOP": "autoplayStop";
    "S_IMAGESREADY": "imagesReady";
    "S_LAZYIMAGELOAD": "lazyImageLoad";
    "S_LAZYIMAGEREADY": "lazyImageReady";
    "S_SCROLLDRAGEND": "scrollDragEnd";
    "S_SCROLLDRAGMOVE": "scrollDragMove";
    "S_SCROLLDRAGSTART": "scrollDragStart";
    "S_NAVIGATIONHIDE": "navigationHide";
    "S_NAVIGATIONSHOW": "navigationShow";
    "S_PAGINATIONRENDER": "paginationRender";
    "S_PAGINATIONUPDATE": "paginationUpdate";
    "S_PAGINATIONHIDE": "paginationHide";
    "S_PAGINATIONSHOW": "paginationShow";
    "S_TAP": "swiperTap";
    "S_CLICK": "swiperClick";
    "S_DOUBLETAP": "swiperDoubleTap";
    "S_TOUCHEND": "swiperTouchEnd";
    "S_TOUCHMOVE": "swiperTouchMove";
    "S_TOUCHSTART": "swiperTouchStart";
    "S_TOUCHMOVEOPPOSITE": "swiperTouchMoveOpposite";
    "S_TRANSITIONEND": "swiperTransitionEnd";
    "S_TRANSITIONSTART": "swiperTransitionStart";
    "S_SLIDEPREVTRANSITIONEND": "slidePrevTransitionEnd";
    "S_SLIDEPREVTRANSITIONSTART": "slidePrevTransitionStart";
    "S_SLIDENEXTTRANSITIONEND": "slideNextTransitionEnd";
    "S_SLIDENEXTTRANSITIONSTART": "slideNextTransitionStart";
    "S_SLIDECHANGETRANSITIONEND": "slideChangeTransitionEnd";
    "S_SLIDECHANGETRANSITIONSTART": "slideChangeTransitionStart";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3dpcGVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzd2lwZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTBFQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nWm9uZSwgRWxlbWVudFJlZiwgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95LCBFdmVudEVtaXR0ZXIsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTd2lwZXJEaXJlY3RpdmUgfSBmcm9tICcuL3N3aXBlci5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgU3dpcGVyQ29uZmlnSW50ZXJmYWNlIH0gZnJvbSAnLi9zd2lwZXIuaW50ZXJmYWNlcyc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBTd2lwZXJDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgem9uZTtcbiAgICBwcml2YXRlIGNkUmVmO1xuICAgIHByaXZhdGUgcGxhdGZvcm1JZDtcbiAgICBwcml2YXRlIGRlZmF1bHRzO1xuICAgIHByaXZhdGUgbW87XG4gICAgc3dpcGVyQ29uZmlnOiBhbnk7XG4gICAgcGFnaW5hdGlvbkJhY2t1cDogYW55O1xuICAgIHBhZ2luYXRpb25Db25maWc6IGFueTtcbiAgICBpbmRleDogbnVtYmVyIHwgbnVsbDtcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcbiAgICBwZXJmb3JtYW5jZTogYm9vbGVhbjtcbiAgICBjb25maWc/OiBTd2lwZXJDb25maWdJbnRlcmZhY2U7XG4gICAgdXNlU3dpcGVyQ2xhc3M6IGJvb2xlYW47XG4gICAgaW5kZXhDaGFuZ2U6IEV2ZW50RW1pdHRlcjxudW1iZXI+O1xuICAgIHN3aXBlclNsaWRlcz86IEVsZW1lbnRSZWY7XG4gICAgZGlyZWN0aXZlUmVmPzogU3dpcGVyRGlyZWN0aXZlO1xuICAgIGdldCBpc0F0TGFzdCgpOiBib29sZWFuO1xuICAgIGdldCBpc0F0Rmlyc3QoKTogYm9vbGVhbjtcbiAgICBTX0lOSVQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfQkVGT1JFREVTVFJPWTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19TQ1JPTEw6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfUFJPR1JFU1M6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfS0VZUFJFU1M6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfUkVTSVpFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX0JSRUFLUE9JTlQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfWk9PTUNIQU5HRTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19BRlRFUlJFU0laRTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19CRUZPUkVSRVNJWkU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfQkVGT1JFTE9PUEZJWDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19MT09QRklYOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NMSURFUk1PVkU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfU0xJREVDSEFOR0U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfU0VUVFJBTlNMQVRFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NFVFRSQU5TSVRJT046IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfRlJPTUVER0U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfUkVBQ0hFTkQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfUkVBQ0hCRUdJTk5JTkc6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfQVVUT1BMQVk6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfQVVUT1BMQVlTVEFSVDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19BVVRPUExBWVNUT1A6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfSU1BR0VTUkVBRFk6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfTEFaWUlNQUdFTE9BRDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19MQVpZSU1BR0VSRUFEWTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19TQ1JPTExEUkFHRU5EOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NDUk9MTERSQUdNT1ZFOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NDUk9MTERSQUdTVEFSVDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19OQVZJR0FUSU9OSElERTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19OQVZJR0FUSU9OU0hPVzogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19QQUdJTkFUSU9OUkVOREVSOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1BBR0lOQVRJT05VUERBVEU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfUEFHSU5BVElPTkhJREU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfUEFHSU5BVElPTlNIT1c6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfVEFQOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX0NMSUNLOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX0RPVUJMRVRBUDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19UT1VDSEVORDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19UT1VDSE1PVkU6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfVE9VQ0hTVEFSVDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19UT1VDSE1PVkVPUFBPU0lURTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19UUkFOU0lUSU9ORU5EOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1RSQU5TSVRJT05TVEFSVDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19TTElERVBSRVZUUkFOU0lUSU9ORU5EOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NMSURFUFJFVlRSQU5TSVRJT05TVEFSVDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19TTElERU5FWFRUUkFOU0lUSU9ORU5EOiBFdmVudEVtaXR0ZXI8YW55PjtcbiAgICBTX1NMSURFTkVYVFRSQU5TSVRJT05TVEFSVDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgU19TTElERUNIQU5HRVRSQU5TSVRJT05FTkQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIFNfU0xJREVDSEFOR0VUUkFOU0lUSU9OU1RBUlQ6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGNvbnN0cnVjdG9yKHpvbmU6IE5nWm9uZSwgY2RSZWY6IENoYW5nZURldGVjdG9yUmVmLCBwbGF0Zm9ybUlkOiBPYmplY3QsIGRlZmF1bHRzOiBTd2lwZXJDb25maWdJbnRlcmZhY2UpO1xuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgZ2V0Q29uZmlnKCk6IFN3aXBlckNvbmZpZ0ludGVyZmFjZTtcbiAgICBwcml2YXRlIHVwZGF0ZUNsYXNzZXM7XG4gICAgb25QYWdpbmF0aW9uQ2xpY2soaW5kZXg6IG51bWJlcik6IHZvaWQ7XG59XG4iXX0=