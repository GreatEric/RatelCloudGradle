/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectorRef } from '@angular/core';
import { NotificationConfig, NzConfigService } from 'ng-zorro-antd/core/config';
import { NzMNContainerComponent } from 'ng-zorro-antd/message';
import { NzNotificationData, NzNotificationDataOptions } from './typings';
import * as ɵngcc0 from '@angular/core';
export declare class NzNotificationContainerComponent extends NzMNContainerComponent {
    bottom: string | null;
    top: string | null;
    config: Required<NotificationConfig>;
    instances: Array<Required<NzNotificationData>>;
    topLeftInstances: Array<Required<NzNotificationData>>;
    topRightInstances: Array<Required<NzNotificationData>>;
    bottomLeftInstances: Array<Required<NzNotificationData>>;
    bottomRightInstances: Array<Required<NzNotificationData>>;
    constructor(cdr: ChangeDetectorRef, nzConfigService: NzConfigService);
    create(notification: NzNotificationData): Required<NzNotificationData>;
    protected onCreate(instance: NzNotificationData): Required<NzNotificationData>;
    protected subscribeConfigChange(): void;
    protected updateConfig(): void;
    private replaceNotification;
    protected readyInstances(): void;
    protected mergeOptions(options?: NzNotificationDataOptions): NzNotificationDataOptions;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzNotificationContainerComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzNotificationContainerComponent, "nz-notification-container", ["nzNotificationContainer"], {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm90aWZpY2F0aW9uLWNvbnRhaW5lci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibm90aWZpY2F0aW9uLWNvbnRhaW5lci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7O0FBV0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWxpYmFiYS5jb20gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25Db25maWcsIE56Q29uZmlnU2VydmljZSB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZS9jb25maWcnO1xuaW1wb3J0IHsgTnpNTkNvbnRhaW5lckNvbXBvbmVudCB9IGZyb20gJ25nLXpvcnJvLWFudGQvbWVzc2FnZSc7XG5pbXBvcnQgeyBOek5vdGlmaWNhdGlvbkRhdGEsIE56Tm90aWZpY2F0aW9uRGF0YU9wdGlvbnMgfSBmcm9tICcuL3R5cGluZ3MnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpOb3RpZmljYXRpb25Db250YWluZXJDb21wb25lbnQgZXh0ZW5kcyBOek1OQ29udGFpbmVyQ29tcG9uZW50IHtcbiAgICBib3R0b206IHN0cmluZyB8IG51bGw7XG4gICAgdG9wOiBzdHJpbmcgfCBudWxsO1xuICAgIGNvbmZpZzogUmVxdWlyZWQ8Tm90aWZpY2F0aW9uQ29uZmlnPjtcbiAgICBpbnN0YW5jZXM6IEFycmF5PFJlcXVpcmVkPE56Tm90aWZpY2F0aW9uRGF0YT4+O1xuICAgIHRvcExlZnRJbnN0YW5jZXM6IEFycmF5PFJlcXVpcmVkPE56Tm90aWZpY2F0aW9uRGF0YT4+O1xuICAgIHRvcFJpZ2h0SW5zdGFuY2VzOiBBcnJheTxSZXF1aXJlZDxOek5vdGlmaWNhdGlvbkRhdGE+PjtcbiAgICBib3R0b21MZWZ0SW5zdGFuY2VzOiBBcnJheTxSZXF1aXJlZDxOek5vdGlmaWNhdGlvbkRhdGE+PjtcbiAgICBib3R0b21SaWdodEluc3RhbmNlczogQXJyYXk8UmVxdWlyZWQ8TnpOb3RpZmljYXRpb25EYXRhPj47XG4gICAgY29uc3RydWN0b3IoY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgbnpDb25maWdTZXJ2aWNlOiBOekNvbmZpZ1NlcnZpY2UpO1xuICAgIGNyZWF0ZShub3RpZmljYXRpb246IE56Tm90aWZpY2F0aW9uRGF0YSk6IFJlcXVpcmVkPE56Tm90aWZpY2F0aW9uRGF0YT47XG4gICAgcHJvdGVjdGVkIG9uQ3JlYXRlKGluc3RhbmNlOiBOek5vdGlmaWNhdGlvbkRhdGEpOiBSZXF1aXJlZDxOek5vdGlmaWNhdGlvbkRhdGE+O1xuICAgIHByb3RlY3RlZCBzdWJzY3JpYmVDb25maWdDaGFuZ2UoKTogdm9pZDtcbiAgICBwcm90ZWN0ZWQgdXBkYXRlQ29uZmlnKCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSByZXBsYWNlTm90aWZpY2F0aW9uO1xuICAgIHByb3RlY3RlZCByZWFkeUluc3RhbmNlcygpOiB2b2lkO1xuICAgIHByb3RlY3RlZCBtZXJnZU9wdGlvbnMob3B0aW9ucz86IE56Tm90aWZpY2F0aW9uRGF0YU9wdGlvbnMpOiBOek5vdGlmaWNhdGlvbkRhdGFPcHRpb25zO1xufVxuIl19