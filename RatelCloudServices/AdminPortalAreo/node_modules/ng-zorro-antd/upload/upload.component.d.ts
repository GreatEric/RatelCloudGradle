/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, TemplateRef } from '@angular/core';
import { BooleanInput, NumberInput, NzSafeAny } from 'ng-zorro-antd/core/types';
import { Observable, Subscription } from 'rxjs';
import { NzI18nService } from 'ng-zorro-antd/i18n';
import { ShowUploadListInterface, UploadChangeParam, UploadFile, UploadFilter, UploadListType, UploadTransformFileType, UploadType, UploadXHRArgs, ZipButtonOptions } from './interface';
import { NzUploadBtnComponent } from './upload-btn.component';
import { NzUploadListComponent } from './upload-list.component';
import * as ɵngcc0 from '@angular/core';
export declare class NzUploadComponent implements OnInit, OnChanges, OnDestroy {
    private cdr;
    private i18n;
    static ngAcceptInputType_nzLimit: NumberInput;
    static ngAcceptInputType_nzSize: NumberInput;
    static ngAcceptInputType_nzDirectory: BooleanInput;
    static ngAcceptInputType_nzOpenFileDialogOnClick: BooleanInput;
    static ngAcceptInputType_nzDisabled: BooleanInput;
    static ngAcceptInputType_nzMultiple: BooleanInput;
    static ngAcceptInputType_nzShowUploadList: BooleanInput | ShowUploadListInterface | undefined | null;
    static ngAcceptInputType_nzShowButton: BooleanInput;
    static ngAcceptInputType_nzWithCredentials: BooleanInput;
    private i18n$;
    uploadComp: NzUploadBtnComponent;
    listComp: NzUploadListComponent;
    locale: NzSafeAny;
    nzType: UploadType;
    nzLimit: number;
    nzSize: number;
    nzFileType: string;
    nzAccept: string | string[];
    nzAction: string | ((file: UploadFile) => string | Observable<string>);
    nzDirectory: boolean;
    nzOpenFileDialogOnClick: boolean;
    nzBeforeUpload: (file: UploadFile, fileList: UploadFile[]) => boolean | Observable<boolean>;
    nzCustomRequest: (item: UploadXHRArgs) => Subscription;
    nzData: {} | ((file: UploadFile) => {} | Observable<{}>);
    nzFilter: UploadFilter[];
    nzFileList: UploadFile[];
    nzDisabled: boolean;
    nzHeaders: {} | ((file: UploadFile) => {} | Observable<{}>);
    nzListType: UploadListType;
    nzMultiple: boolean;
    nzName: string;
    private _showUploadList;
    set nzShowUploadList(value: boolean | ShowUploadListInterface);
    get nzShowUploadList(): boolean | ShowUploadListInterface;
    nzShowButton: boolean;
    nzWithCredentials: boolean;
    nzRemove: (file: UploadFile) => boolean | Observable<boolean>;
    nzPreview: (file: UploadFile) => void;
    nzPreviewFile: (file: UploadFile) => Observable<string>;
    nzTransformFile: (file: UploadFile) => UploadTransformFileType;
    nzDownload: (file: UploadFile) => void;
    nzIconRender: TemplateRef<void>;
    readonly nzChange: EventEmitter<UploadChangeParam>;
    readonly nzFileListChange: EventEmitter<UploadFile[]>;
    _btnOptions: ZipButtonOptions;
    private zipOptions;
    constructor(cdr: ChangeDetectorRef, i18n: NzI18nService);
    private fileToObject;
    private getFileItem;
    private removeFileItem;
    private onStart;
    private onProgress;
    private onSuccess;
    private onError;
    private dragState;
    fileDrop(e: DragEvent): void;
    private detectChangesList;
    onRemove: (file: UploadFile) => void;
    private prefixCls;
    classList: string[];
    private setClassMap;
    ngOnInit(): void;
    ngOnChanges(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzUploadComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzUploadComponent, "nz-upload", ["nzUpload"], {
    "nzType": "nzType";
    "nzLimit": "nzLimit";
    "nzSize": "nzSize";
    "nzDirectory": "nzDirectory";
    "nzOpenFileDialogOnClick": "nzOpenFileDialogOnClick";
    "nzFilter": "nzFilter";
    "nzFileList": "nzFileList";
    "nzDisabled": "nzDisabled";
    "nzListType": "nzListType";
    "nzMultiple": "nzMultiple";
    "nzName": "nzName";
    "nzShowButton": "nzShowButton";
    "nzWithCredentials": "nzWithCredentials";
    "nzShowUploadList": "nzShowUploadList";
    "nzFileType": "nzFileType";
    "nzAccept": "nzAccept";
    "nzAction": "nzAction";
    "nzBeforeUpload": "nzBeforeUpload";
    "nzCustomRequest": "nzCustomRequest";
    "nzData": "nzData";
    "nzHeaders": "nzHeaders";
    "nzRemove": "nzRemove";
    "nzPreview": "nzPreview";
    "nzPreviewFile": "nzPreviewFile";
    "nzTransformFile": "nzTransformFile";
    "nzDownload": "nzDownload";
    "nzIconRender": "nzIconRender";
}, {
    "nzChange": "nzChange";
    "nzFileListChange": "nzFileListChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBsb2FkLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJ1cGxvYWQuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7OztBQWNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbUVBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFsaWJhYmEuY29tIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBDaGFuZ2VEZXRlY3RvclJlZiwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQm9vbGVhbklucHV0LCBOdW1iZXJJbnB1dCwgTnpTYWZlQW55IH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3R5cGVzJztcbmltcG9ydCB7IE9ic2VydmFibGUsIFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTnpJMThuU2VydmljZSB9IGZyb20gJ25nLXpvcnJvLWFudGQvaTE4bic7XG5pbXBvcnQgeyBTaG93VXBsb2FkTGlzdEludGVyZmFjZSwgVXBsb2FkQ2hhbmdlUGFyYW0sIFVwbG9hZEZpbGUsIFVwbG9hZEZpbHRlciwgVXBsb2FkTGlzdFR5cGUsIFVwbG9hZFRyYW5zZm9ybUZpbGVUeXBlLCBVcGxvYWRUeXBlLCBVcGxvYWRYSFJBcmdzLCBaaXBCdXR0b25PcHRpb25zIH0gZnJvbSAnLi9pbnRlcmZhY2UnO1xuaW1wb3J0IHsgTnpVcGxvYWRCdG5Db21wb25lbnQgfSBmcm9tICcuL3VwbG9hZC1idG4uY29tcG9uZW50JztcbmltcG9ydCB7IE56VXBsb2FkTGlzdENvbXBvbmVudCB9IGZyb20gJy4vdXBsb2FkLWxpc3QuY29tcG9uZW50JztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE56VXBsb2FkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XG4gICAgcHJpdmF0ZSBjZHI7XG4gICAgcHJpdmF0ZSBpMThuO1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9uekxpbWl0OiBOdW1iZXJJbnB1dDtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpTaXplOiBOdW1iZXJJbnB1dDtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpEaXJlY3Rvcnk6IEJvb2xlYW5JbnB1dDtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpPcGVuRmlsZURpYWxvZ09uQ2xpY2s6IEJvb2xlYW5JbnB1dDtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpEaXNhYmxlZDogQm9vbGVhbklucHV0O1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9uek11bHRpcGxlOiBCb29sZWFuSW5wdXQ7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX256U2hvd1VwbG9hZExpc3Q6IEJvb2xlYW5JbnB1dCB8IFNob3dVcGxvYWRMaXN0SW50ZXJmYWNlIHwgdW5kZWZpbmVkIHwgbnVsbDtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfbnpTaG93QnV0dG9uOiBCb29sZWFuSW5wdXQ7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX256V2l0aENyZWRlbnRpYWxzOiBCb29sZWFuSW5wdXQ7XG4gICAgcHJpdmF0ZSBpMThuJDtcbiAgICB1cGxvYWRDb21wOiBOelVwbG9hZEJ0bkNvbXBvbmVudDtcbiAgICBsaXN0Q29tcDogTnpVcGxvYWRMaXN0Q29tcG9uZW50O1xuICAgIGxvY2FsZTogTnpTYWZlQW55O1xuICAgIG56VHlwZTogVXBsb2FkVHlwZTtcbiAgICBuekxpbWl0OiBudW1iZXI7XG4gICAgbnpTaXplOiBudW1iZXI7XG4gICAgbnpGaWxlVHlwZTogc3RyaW5nO1xuICAgIG56QWNjZXB0OiBzdHJpbmcgfCBzdHJpbmdbXTtcbiAgICBuekFjdGlvbjogc3RyaW5nIHwgKChmaWxlOiBVcGxvYWRGaWxlKSA9PiBzdHJpbmcgfCBPYnNlcnZhYmxlPHN0cmluZz4pO1xuICAgIG56RGlyZWN0b3J5OiBib29sZWFuO1xuICAgIG56T3BlbkZpbGVEaWFsb2dPbkNsaWNrOiBib29sZWFuO1xuICAgIG56QmVmb3JlVXBsb2FkOiAoZmlsZTogVXBsb2FkRmlsZSwgZmlsZUxpc3Q6IFVwbG9hZEZpbGVbXSkgPT4gYm9vbGVhbiB8IE9ic2VydmFibGU8Ym9vbGVhbj47XG4gICAgbnpDdXN0b21SZXF1ZXN0OiAoaXRlbTogVXBsb2FkWEhSQXJncykgPT4gU3Vic2NyaXB0aW9uO1xuICAgIG56RGF0YToge30gfCAoKGZpbGU6IFVwbG9hZEZpbGUpID0+IHt9IHwgT2JzZXJ2YWJsZTx7fT4pO1xuICAgIG56RmlsdGVyOiBVcGxvYWRGaWx0ZXJbXTtcbiAgICBuekZpbGVMaXN0OiBVcGxvYWRGaWxlW107XG4gICAgbnpEaXNhYmxlZDogYm9vbGVhbjtcbiAgICBuekhlYWRlcnM6IHt9IHwgKChmaWxlOiBVcGxvYWRGaWxlKSA9PiB7fSB8IE9ic2VydmFibGU8e30+KTtcbiAgICBuekxpc3RUeXBlOiBVcGxvYWRMaXN0VHlwZTtcbiAgICBuek11bHRpcGxlOiBib29sZWFuO1xuICAgIG56TmFtZTogc3RyaW5nO1xuICAgIHByaXZhdGUgX3Nob3dVcGxvYWRMaXN0O1xuICAgIHNldCBuelNob3dVcGxvYWRMaXN0KHZhbHVlOiBib29sZWFuIHwgU2hvd1VwbG9hZExpc3RJbnRlcmZhY2UpO1xuICAgIGdldCBuelNob3dVcGxvYWRMaXN0KCk6IGJvb2xlYW4gfCBTaG93VXBsb2FkTGlzdEludGVyZmFjZTtcbiAgICBuelNob3dCdXR0b246IGJvb2xlYW47XG4gICAgbnpXaXRoQ3JlZGVudGlhbHM6IGJvb2xlYW47XG4gICAgbnpSZW1vdmU6IChmaWxlOiBVcGxvYWRGaWxlKSA9PiBib29sZWFuIHwgT2JzZXJ2YWJsZTxib29sZWFuPjtcbiAgICBuelByZXZpZXc6IChmaWxlOiBVcGxvYWRGaWxlKSA9PiB2b2lkO1xuICAgIG56UHJldmlld0ZpbGU6IChmaWxlOiBVcGxvYWRGaWxlKSA9PiBPYnNlcnZhYmxlPHN0cmluZz47XG4gICAgbnpUcmFuc2Zvcm1GaWxlOiAoZmlsZTogVXBsb2FkRmlsZSkgPT4gVXBsb2FkVHJhbnNmb3JtRmlsZVR5cGU7XG4gICAgbnpEb3dubG9hZDogKGZpbGU6IFVwbG9hZEZpbGUpID0+IHZvaWQ7XG4gICAgbnpJY29uUmVuZGVyOiBUZW1wbGF0ZVJlZjx2b2lkPjtcbiAgICByZWFkb25seSBuekNoYW5nZTogRXZlbnRFbWl0dGVyPFVwbG9hZENoYW5nZVBhcmFtPjtcbiAgICByZWFkb25seSBuekZpbGVMaXN0Q2hhbmdlOiBFdmVudEVtaXR0ZXI8VXBsb2FkRmlsZVtdPjtcbiAgICBfYnRuT3B0aW9uczogWmlwQnV0dG9uT3B0aW9ucztcbiAgICBwcml2YXRlIHppcE9wdGlvbnM7XG4gICAgY29uc3RydWN0b3IoY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgaTE4bjogTnpJMThuU2VydmljZSk7XG4gICAgcHJpdmF0ZSBmaWxlVG9PYmplY3Q7XG4gICAgcHJpdmF0ZSBnZXRGaWxlSXRlbTtcbiAgICBwcml2YXRlIHJlbW92ZUZpbGVJdGVtO1xuICAgIHByaXZhdGUgb25TdGFydDtcbiAgICBwcml2YXRlIG9uUHJvZ3Jlc3M7XG4gICAgcHJpdmF0ZSBvblN1Y2Nlc3M7XG4gICAgcHJpdmF0ZSBvbkVycm9yO1xuICAgIHByaXZhdGUgZHJhZ1N0YXRlO1xuICAgIGZpbGVEcm9wKGU6IERyYWdFdmVudCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBkZXRlY3RDaGFuZ2VzTGlzdDtcbiAgICBvblJlbW92ZTogKGZpbGU6IFVwbG9hZEZpbGUpID0+IHZvaWQ7XG4gICAgcHJpdmF0ZSBwcmVmaXhDbHM7XG4gICAgY2xhc3NMaXN0OiBzdHJpbmdbXTtcbiAgICBwcml2YXRlIHNldENsYXNzTWFwO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xufVxuIl19