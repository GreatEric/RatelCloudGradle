/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Platform } from '@angular/cdk/platform';
import { ChangeDetectorRef, NgZone, OnChanges, TemplateRef } from '@angular/core';
import { NgClassType, NzSafeAny } from 'ng-zorro-antd/core/types';
import { Observable } from 'rxjs';
import { ShowUploadListInterface, UploadFile, UploadListType } from './interface';
import * as ɵngcc0 from '@angular/core';
declare type UploadListIconType = '' | 'uploading' | 'thumbnail';
interface UploadListFile extends UploadFile {
    isImageUrl?: boolean;
    isUploading?: boolean;
    iconType?: UploadListIconType;
    listItemNameCls?: NgClassType;
    showDownload?: boolean;
}
export declare class NzUploadListComponent implements OnChanges {
    private cdr;
    private doc;
    private ngZone;
    private platform;
    list: UploadListFile[];
    private get showPic();
    locale: NzSafeAny;
    listType: UploadListType;
    set items(list: UploadFile[]);
    icons: ShowUploadListInterface;
    onPreview: (file: UploadFile) => void;
    onRemove: (file: UploadFile) => void;
    onDownload: (file: UploadFile) => void;
    previewFile: (file: UploadFile) => Observable<string>;
    iconRender: TemplateRef<void>;
    private genErr;
    private extname;
    isImageUrl(file: UploadFile): boolean;
    private getIconType;
    private previewImage;
    private genThumb;
    private listItemNameCls;
    private showDownload;
    private fixData;
    handlePreview(file: UploadFile, e: Event): void;
    handleRemove(file: UploadFile, e: Event): void;
    handleDownload(file: UploadFile): void;
    constructor(cdr: ChangeDetectorRef, doc: NzSafeAny, ngZone: NgZone, platform: Platform);
    detectChanges(): void;
    ngOnChanges(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzUploadListComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzUploadListComponent, "nz-upload-list", ["nzUploadList"], {
    "locale": "locale";
    "items": "items";
    "listType": "listType";
    "icons": "icons";
    "onPreview": "onPreview";
    "onRemove": "onRemove";
    "onDownload": "onDownload";
    "previewFile": "previewFile";
    "iconRender": "iconRender";
}, {}, never>;
}
export {};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBsb2FkLWxpc3QuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInVwbG9hZC1saXN0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXVDQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBbGliYWJhLmNvbSBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgUGxhdGZvcm0gfSBmcm9tICdAYW5ndWxhci9jZGsvcGxhdGZvcm0nO1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIE5nWm9uZSwgT25DaGFuZ2VzLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdDbGFzc1R5cGUsIE56U2FmZUFueSB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZS90eXBlcyc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBTaG93VXBsb2FkTGlzdEludGVyZmFjZSwgVXBsb2FkRmlsZSwgVXBsb2FkTGlzdFR5cGUgfSBmcm9tICcuL2ludGVyZmFjZSc7XG5kZWNsYXJlIHR5cGUgVXBsb2FkTGlzdEljb25UeXBlID0gJycgfCAndXBsb2FkaW5nJyB8ICd0aHVtYm5haWwnO1xuaW50ZXJmYWNlIFVwbG9hZExpc3RGaWxlIGV4dGVuZHMgVXBsb2FkRmlsZSB7XG4gICAgaXNJbWFnZVVybD86IGJvb2xlYW47XG4gICAgaXNVcGxvYWRpbmc/OiBib29sZWFuO1xuICAgIGljb25UeXBlPzogVXBsb2FkTGlzdEljb25UeXBlO1xuICAgIGxpc3RJdGVtTmFtZUNscz86IE5nQ2xhc3NUeXBlO1xuICAgIHNob3dEb3dubG9hZD86IGJvb2xlYW47XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOelVwbG9hZExpc3RDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgY2RyO1xuICAgIHByaXZhdGUgZG9jO1xuICAgIHByaXZhdGUgbmdab25lO1xuICAgIHByaXZhdGUgcGxhdGZvcm07XG4gICAgbGlzdDogVXBsb2FkTGlzdEZpbGVbXTtcbiAgICBwcml2YXRlIGdldCBzaG93UGljKCk7XG4gICAgbG9jYWxlOiBOelNhZmVBbnk7XG4gICAgbGlzdFR5cGU6IFVwbG9hZExpc3RUeXBlO1xuICAgIHNldCBpdGVtcyhsaXN0OiBVcGxvYWRGaWxlW10pO1xuICAgIGljb25zOiBTaG93VXBsb2FkTGlzdEludGVyZmFjZTtcbiAgICBvblByZXZpZXc6IChmaWxlOiBVcGxvYWRGaWxlKSA9PiB2b2lkO1xuICAgIG9uUmVtb3ZlOiAoZmlsZTogVXBsb2FkRmlsZSkgPT4gdm9pZDtcbiAgICBvbkRvd25sb2FkOiAoZmlsZTogVXBsb2FkRmlsZSkgPT4gdm9pZDtcbiAgICBwcmV2aWV3RmlsZTogKGZpbGU6IFVwbG9hZEZpbGUpID0+IE9ic2VydmFibGU8c3RyaW5nPjtcbiAgICBpY29uUmVuZGVyOiBUZW1wbGF0ZVJlZjx2b2lkPjtcbiAgICBwcml2YXRlIGdlbkVycjtcbiAgICBwcml2YXRlIGV4dG5hbWU7XG4gICAgaXNJbWFnZVVybChmaWxlOiBVcGxvYWRGaWxlKTogYm9vbGVhbjtcbiAgICBwcml2YXRlIGdldEljb25UeXBlO1xuICAgIHByaXZhdGUgcHJldmlld0ltYWdlO1xuICAgIHByaXZhdGUgZ2VuVGh1bWI7XG4gICAgcHJpdmF0ZSBsaXN0SXRlbU5hbWVDbHM7XG4gICAgcHJpdmF0ZSBzaG93RG93bmxvYWQ7XG4gICAgcHJpdmF0ZSBmaXhEYXRhO1xuICAgIGhhbmRsZVByZXZpZXcoZmlsZTogVXBsb2FkRmlsZSwgZTogRXZlbnQpOiB2b2lkO1xuICAgIGhhbmRsZVJlbW92ZShmaWxlOiBVcGxvYWRGaWxlLCBlOiBFdmVudCk6IHZvaWQ7XG4gICAgaGFuZGxlRG93bmxvYWQoZmlsZTogVXBsb2FkRmlsZSk6IHZvaWQ7XG4gICAgY29uc3RydWN0b3IoY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgZG9jOiBOelNhZmVBbnksIG5nWm9uZTogTmdab25lLCBwbGF0Zm9ybTogUGxhdGZvcm0pO1xuICAgIGRldGVjdENoYW5nZXMoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcygpOiB2b2lkO1xufVxuZXhwb3J0IHt9O1xuIl19