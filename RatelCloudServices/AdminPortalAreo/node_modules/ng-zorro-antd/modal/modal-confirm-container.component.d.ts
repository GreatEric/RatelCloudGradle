/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { FocusTrapFactory } from '@angular/cdk/a11y';
import { OverlayRef } from '@angular/cdk/overlay';
import { CdkPortalOutlet, ComponentPortal } from '@angular/cdk/portal';
import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy, Renderer2 } from '@angular/core';
import { NzSafeAny } from 'ng-zorro-antd/core/types';
import { NzI18nService } from 'ng-zorro-antd/i18n';
import { BaseModalContainer } from './modal-container';
import { ModalOptions } from './modal-types';
import * as ɵngcc0 from '@angular/core';
export declare class NzModalConfirmContainerComponent extends BaseModalContainer implements OnDestroy {
    private i18n;
    config: ModalOptions;
    portalOutlet: CdkPortalOutlet;
    modalElementRef: ElementRef<HTMLDivElement>;
    readonly cancelTriggered: EventEmitter<void>;
    readonly okTriggered: EventEmitter<void>;
    locale: {
        okText?: string;
        cancelText?: string;
    };
    private destroy$;
    constructor(i18n: NzI18nService, elementRef: ElementRef, focusTrapFactory: FocusTrapFactory, cdr: ChangeDetectorRef, render: Renderer2, zone: NgZone, overlayRef: OverlayRef, config: ModalOptions, document: NzSafeAny, animationType: string);
    onCancel(): void;
    onOk(): void;
    attachComponentPortal<T>(_portal: ComponentPortal<T>): never;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzModalConfirmContainerComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzModalConfirmContainerComponent, "nz-modal-confirm-container", ["nzModalConfirmContainer"], {}, {
    "cancelTriggered": "cancelTriggered";
    "okTriggered": "okTriggered";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kYWwtY29uZmlybS1jb250YWluZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbIm1vZGFsLWNvbmZpcm0tY29udGFpbmVyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7O0FBZUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFpQkEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWxpYmFiYS5jb20gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IEZvY3VzVHJhcEZhY3RvcnkgfSBmcm9tICdAYW5ndWxhci9jZGsvYTExeSc7XG5pbXBvcnQgeyBPdmVybGF5UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY2RrL292ZXJsYXknO1xuaW1wb3J0IHsgQ2RrUG9ydGFsT3V0bGV0LCBDb21wb25lbnRQb3J0YWwgfSBmcm9tICdAYW5ndWxhci9jZGsvcG9ydGFsJztcbmltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE5nWm9uZSwgT25EZXN0cm95LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE56U2FmZUFueSB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZS90eXBlcyc7XG5pbXBvcnQgeyBOekkxOG5TZXJ2aWNlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9pMThuJztcbmltcG9ydCB7IEJhc2VNb2RhbENvbnRhaW5lciB9IGZyb20gJy4vbW9kYWwtY29udGFpbmVyJztcbmltcG9ydCB7IE1vZGFsT3B0aW9ucyB9IGZyb20gJy4vbW9kYWwtdHlwZXMnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpNb2RhbENvbmZpcm1Db250YWluZXJDb21wb25lbnQgZXh0ZW5kcyBCYXNlTW9kYWxDb250YWluZXIgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICAgIHByaXZhdGUgaTE4bjtcbiAgICBjb25maWc6IE1vZGFsT3B0aW9ucztcbiAgICBwb3J0YWxPdXRsZXQ6IENka1BvcnRhbE91dGxldDtcbiAgICBtb2RhbEVsZW1lbnRSZWY6IEVsZW1lbnRSZWY8SFRNTERpdkVsZW1lbnQ+O1xuICAgIHJlYWRvbmx5IGNhbmNlbFRyaWdnZXJlZDogRXZlbnRFbWl0dGVyPHZvaWQ+O1xuICAgIHJlYWRvbmx5IG9rVHJpZ2dlcmVkOiBFdmVudEVtaXR0ZXI8dm9pZD47XG4gICAgbG9jYWxlOiB7XG4gICAgICAgIG9rVGV4dD86IHN0cmluZztcbiAgICAgICAgY2FuY2VsVGV4dD86IHN0cmluZztcbiAgICB9O1xuICAgIHByaXZhdGUgZGVzdHJveSQ7XG4gICAgY29uc3RydWN0b3IoaTE4bjogTnpJMThuU2VydmljZSwgZWxlbWVudFJlZjogRWxlbWVudFJlZiwgZm9jdXNUcmFwRmFjdG9yeTogRm9jdXNUcmFwRmFjdG9yeSwgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgcmVuZGVyOiBSZW5kZXJlcjIsIHpvbmU6IE5nWm9uZSwgb3ZlcmxheVJlZjogT3ZlcmxheVJlZiwgY29uZmlnOiBNb2RhbE9wdGlvbnMsIGRvY3VtZW50OiBOelNhZmVBbnksIGFuaW1hdGlvblR5cGU6IHN0cmluZyk7XG4gICAgb25DYW5jZWwoKTogdm9pZDtcbiAgICBvbk9rKCk6IHZvaWQ7XG4gICAgYXR0YWNoQ29tcG9uZW50UG9ydGFsPFQ+KF9wb3J0YWw6IENvbXBvbmVudFBvcnRhbDxUPik6IG5ldmVyO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=