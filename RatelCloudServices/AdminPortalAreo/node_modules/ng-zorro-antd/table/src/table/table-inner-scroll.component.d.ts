/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { Platform } from '@angular/cdk/platform';
import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';
import { AfterViewInit, ElementRef, NgZone, OnChanges, OnDestroy, Renderer2, SimpleChanges, TemplateRef, TrackByFunction } from '@angular/core';
import { NzResizeService } from 'ng-zorro-antd/core/services';
import { NzSafeAny } from 'ng-zorro-antd/core/types';
import { NzTableData } from '../table.types';
import * as ɵngcc0 from '@angular/core';
export declare class NzTableInnerScrollComponent implements OnChanges, AfterViewInit, OnDestroy {
    private renderer;
    private ngZone;
    private platform;
    private resizeService;
    data: NzTableData[];
    scrollX: string | null;
    scrollY: string | null;
    contentTemplate: TemplateRef<NzSafeAny> | null;
    widthConfig: string[];
    listOfColWidth: string[];
    theadTemplate: TemplateRef<NzSafeAny> | null;
    virtualTemplate: TemplateRef<NzSafeAny> | null;
    virtualItemSize: number;
    virtualMaxBufferPx: number;
    virtualMinBufferPx: number;
    tableMainElement: HTMLDivElement;
    virtualForTrackBy: TrackByFunction<NzTableData>;
    tableHeaderElement: ElementRef;
    tableBodyElement: ElementRef;
    cdkVirtualScrollViewport: CdkVirtualScrollViewport;
    headerStyleMap: {};
    bodyStyleMap: {};
    verticalScrollBarWidth: number;
    noDateVirtualHeight: string;
    private data$;
    private scroll$;
    private destroy$;
    setScrollPositionClassName(clear?: boolean): void;
    constructor(renderer: Renderer2, ngZone: NgZone, platform: Platform, resizeService: NzResizeService);
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzTableInnerScrollComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzTableInnerScrollComponent, "nz-table-inner-scroll", never, {
    "data": "data";
    "scrollX": "scrollX";
    "scrollY": "scrollY";
    "contentTemplate": "contentTemplate";
    "widthConfig": "widthConfig";
    "listOfColWidth": "listOfColWidth";
    "theadTemplate": "theadTemplate";
    "virtualTemplate": "virtualTemplate";
    "virtualItemSize": "virtualItemSize";
    "virtualMaxBufferPx": "virtualMaxBufferPx";
    "virtualMinBufferPx": "virtualMinBufferPx";
    "virtualForTrackBy": "virtualForTrackBy";
    "verticalScrollBarWidth": "verticalScrollBarWidth";
    "tableMainElement": "tableMainElement";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUtaW5uZXItc2Nyb2xsLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJ0YWJsZS1pbm5lci1zY3JvbGwuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7O0FBYUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBaUNBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFsaWJhYmEuY29tIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL05HLVpPUlJPL25nLXpvcnJvLWFudGQvYmxvYi9tYXN0ZXIvTElDRU5TRVxuICovXG5pbXBvcnQgeyBQbGF0Zm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9wbGF0Zm9ybSc7XG5pbXBvcnQgeyBDZGtWaXJ0dWFsU2Nyb2xsVmlld3BvcnQgfSBmcm9tICdAYW5ndWxhci9jZGsvc2Nyb2xsaW5nJztcbmltcG9ydCB7IEFmdGVyVmlld0luaXQsIEVsZW1lbnRSZWYsIE5nWm9uZSwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIFJlbmRlcmVyMiwgU2ltcGxlQ2hhbmdlcywgVGVtcGxhdGVSZWYsIFRyYWNrQnlGdW5jdGlvbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTnpSZXNpemVTZXJ2aWNlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3NlcnZpY2VzJztcbmltcG9ydCB7IE56U2FmZUFueSB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZS90eXBlcyc7XG5pbXBvcnQgeyBOelRhYmxlRGF0YSB9IGZyb20gJy4uL3RhYmxlLnR5cGVzJztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE56VGFibGVJbm5lclNjcm9sbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xuICAgIHByaXZhdGUgbmdab25lO1xuICAgIHByaXZhdGUgcGxhdGZvcm07XG4gICAgcHJpdmF0ZSByZXNpemVTZXJ2aWNlO1xuICAgIGRhdGE6IE56VGFibGVEYXRhW107XG4gICAgc2Nyb2xsWDogc3RyaW5nIHwgbnVsbDtcbiAgICBzY3JvbGxZOiBzdHJpbmcgfCBudWxsO1xuICAgIGNvbnRlbnRUZW1wbGF0ZTogVGVtcGxhdGVSZWY8TnpTYWZlQW55PiB8IG51bGw7XG4gICAgd2lkdGhDb25maWc6IHN0cmluZ1tdO1xuICAgIGxpc3RPZkNvbFdpZHRoOiBzdHJpbmdbXTtcbiAgICB0aGVhZFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxOelNhZmVBbnk+IHwgbnVsbDtcbiAgICB2aXJ0dWFsVGVtcGxhdGU6IFRlbXBsYXRlUmVmPE56U2FmZUFueT4gfCBudWxsO1xuICAgIHZpcnR1YWxJdGVtU2l6ZTogbnVtYmVyO1xuICAgIHZpcnR1YWxNYXhCdWZmZXJQeDogbnVtYmVyO1xuICAgIHZpcnR1YWxNaW5CdWZmZXJQeDogbnVtYmVyO1xuICAgIHRhYmxlTWFpbkVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50O1xuICAgIHZpcnR1YWxGb3JUcmFja0J5OiBUcmFja0J5RnVuY3Rpb248TnpUYWJsZURhdGE+O1xuICAgIHRhYmxlSGVhZGVyRWxlbWVudDogRWxlbWVudFJlZjtcbiAgICB0YWJsZUJvZHlFbGVtZW50OiBFbGVtZW50UmVmO1xuICAgIGNka1ZpcnR1YWxTY3JvbGxWaWV3cG9ydDogQ2RrVmlydHVhbFNjcm9sbFZpZXdwb3J0O1xuICAgIGhlYWRlclN0eWxlTWFwOiB7fTtcbiAgICBib2R5U3R5bGVNYXA6IHt9O1xuICAgIHZlcnRpY2FsU2Nyb2xsQmFyV2lkdGg6IG51bWJlcjtcbiAgICBub0RhdGVWaXJ0dWFsSGVpZ2h0OiBzdHJpbmc7XG4gICAgcHJpdmF0ZSBkYXRhJDtcbiAgICBwcml2YXRlIHNjcm9sbCQ7XG4gICAgcHJpdmF0ZSBkZXN0cm95JDtcbiAgICBzZXRTY3JvbGxQb3NpdGlvbkNsYXNzTmFtZShjbGVhcj86IGJvb2xlYW4pOiB2b2lkO1xuICAgIGNvbnN0cnVjdG9yKHJlbmRlcmVyOiBSZW5kZXJlcjIsIG5nWm9uZTogTmdab25lLCBwbGF0Zm9ybTogUGxhdGZvcm0sIHJlc2l6ZVNlcnZpY2U6IE56UmVzaXplU2VydmljZSk7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbiJdfQ==