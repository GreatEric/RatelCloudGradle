/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';
import { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef, TrackByFunction } from '@angular/core';
import { NzConfigService } from 'ng-zorro-antd/core/config';
import { NzResizeObserver } from 'ng-zorro-antd/core/resize-observers';
import { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';
import { PaginationItemRenderContext } from 'ng-zorro-antd/pagination';
import { NzTableDataService } from '../table-data.service';
import { NzTableStyleService } from '../table-style.service';
import { NzTableData, NzTableLayout, NzTablePaginationPosition, NzTableQueryParams, NzTableSize } from '../table.types';
import { NzTableInnerScrollComponent } from './table-inner-scroll.component';
import { NzTableVirtualScrollDirective } from './table-virtual-scroll.directive';
import * as ɵngcc0 from '@angular/core';
export declare class NzTableComponent implements OnInit, OnDestroy, OnChanges, AfterViewInit {
    private elementRef;
    private nzResizeObserver;
    private nzConfigService;
    private cdr;
    private nzTableStyleService;
    private nzTableDataService;
    static ngAcceptInputType_nzFrontPagination: BooleanInput;
    static ngAcceptInputType_nzTemplateMode: BooleanInput;
    static ngAcceptInputType_nzShowPagination: BooleanInput;
    static ngAcceptInputType_nzLoading: BooleanInput;
    static ngAcceptInputType_nzBordered: BooleanInput;
    static ngAcceptInputType_nzShowSizeChanger: BooleanInput;
    static ngAcceptInputType_nzHideOnSinglePage: BooleanInput;
    static ngAcceptInputType_nzShowQuickJumper: BooleanInput;
    static ngAcceptInputType_nzSimple: BooleanInput;
    nzTableLayout: NzTableLayout;
    nzShowTotal: TemplateRef<{
        $implicit: number;
        range: [number, number];
    }> | null;
    nzItemRender: TemplateRef<PaginationItemRenderContext> | null;
    nzLoadingIndicator: TemplateRef<NzSafeAny> | null;
    nzTitle: string | TemplateRef<NzSafeAny> | null;
    nzFooter: string | TemplateRef<NzSafeAny> | null;
    nzNoResult: string | TemplateRef<NzSafeAny> | undefined;
    nzPageSizeOptions: number[];
    nzVirtualItemSize: number;
    nzVirtualMaxBufferPx: number;
    nzVirtualMinBufferPx: number;
    nzVirtualForTrackBy: TrackByFunction<NzTableData>;
    nzLoadingDelay: number;
    nzPageIndex: number;
    nzPageSize: number;
    nzTotal: number;
    nzWidthConfig: Array<string | null>;
    nzData: NzTableData[];
    nzPaginationPosition: NzTablePaginationPosition;
    nzScroll: {
        x?: string | null;
        y?: string | null;
    };
    nzFrontPagination: boolean;
    nzTemplateMode: boolean;
    nzShowPagination: boolean;
    nzLoading: boolean;
    nzBordered: boolean;
    nzSize: NzTableSize;
    nzShowSizeChanger: boolean;
    nzHideOnSinglePage: boolean;
    nzShowQuickJumper: boolean;
    nzSimple: boolean;
    readonly nzPageSizeChange: EventEmitter<number>;
    readonly nzPageIndexChange: EventEmitter<number>;
    readonly nzQueryParams: EventEmitter<NzTableQueryParams>;
    readonly nzCurrentPageDataChange: EventEmitter<any[]>;
    /** public data for ngFor tr */
    data: NzTableData[];
    cdkVirtualScrollViewport: CdkVirtualScrollViewport;
    scrollX: string | null;
    scrollY: string | null;
    theadTemplate: TemplateRef<NzSafeAny> | null;
    listOfColWidth: Array<string | null>;
    hasFixLeft: boolean;
    hasFixRight: boolean;
    private destroy$;
    private loading$;
    private templateMode$;
    nzVirtualScrollDirective: NzTableVirtualScrollDirective;
    nzTableInnerScrollComponent: NzTableInnerScrollComponent;
    verticalScrollBarWidth: number;
    onPageSizeChange(size: number): void;
    onPageIndexChange(index: number): void;
    constructor(elementRef: ElementRef, nzResizeObserver: NzResizeObserver, nzConfigService: NzConfigService, cdr: ChangeDetectorRef, nzTableStyleService: NzTableStyleService, nzTableDataService: NzTableDataService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzTableComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzTableComponent, "nz-table", ["nzTable"], {
    "nzTableLayout": "nzTableLayout";
    "nzShowTotal": "nzShowTotal";
    "nzItemRender": "nzItemRender";
    "nzLoadingIndicator": "nzLoadingIndicator";
    "nzTitle": "nzTitle";
    "nzFooter": "nzFooter";
    "nzNoResult": "nzNoResult";
    "nzPageSizeOptions": "nzPageSizeOptions";
    "nzVirtualItemSize": "nzVirtualItemSize";
    "nzVirtualMaxBufferPx": "nzVirtualMaxBufferPx";
    "nzVirtualMinBufferPx": "nzVirtualMinBufferPx";
    "nzVirtualForTrackBy": "nzVirtualForTrackBy";
    "nzLoadingDelay": "nzLoadingDelay";
    "nzPageIndex": "nzPageIndex";
    "nzPageSize": "nzPageSize";
    "nzTotal": "nzTotal";
    "nzWidthConfig": "nzWidthConfig";
    "nzData": "nzData";
    "nzPaginationPosition": "nzPaginationPosition";
    "nzScroll": "nzScroll";
    "nzFrontPagination": "nzFrontPagination";
    "nzTemplateMode": "nzTemplateMode";
    "nzShowPagination": "nzShowPagination";
    "nzLoading": "nzLoading";
    "nzBordered": "nzBordered";
    "nzSize": "nzSize";
    "nzShowSizeChanger": "nzShowSizeChanger";
    "nzHideOnSinglePage": "nzHideOnSinglePage";
    "nzShowQuickJumper": "nzShowQuickJumper";
    "nzSimple": "nzSimple";
}, {
    "nzPageSizeChange": "nzPageSizeChange";
    "nzPageIndexChange": "nzPageIndexChange";
    "nzQueryParams": "nzQueryParams";
    "nzCurrentPageDataChange": "nzCurrentPageDataChange";
}, ["nzVirtualScrollDirective"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInRhYmxlLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQThFQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBbGliYWJhLmNvbSBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgQ2RrVmlydHVhbFNjcm9sbFZpZXdwb3J0IH0gZnJvbSAnQGFuZ3VsYXIvY2RrL3Njcm9sbGluZyc7XG5pbXBvcnQgeyBBZnRlclZpZXdJbml0LCBDaGFuZ2VEZXRlY3RvclJlZiwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBTaW1wbGVDaGFuZ2VzLCBUZW1wbGF0ZVJlZiwgVHJhY2tCeUZ1bmN0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOekNvbmZpZ1NlcnZpY2UgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvY29uZmlnJztcbmltcG9ydCB7IE56UmVzaXplT2JzZXJ2ZXIgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvcmVzaXplLW9ic2VydmVycyc7XG5pbXBvcnQgeyBCb29sZWFuSW5wdXQsIE56U2FmZUFueSB9IGZyb20gJ25nLXpvcnJvLWFudGQvY29yZS90eXBlcyc7XG5pbXBvcnQgeyBQYWdpbmF0aW9uSXRlbVJlbmRlckNvbnRleHQgfSBmcm9tICduZy16b3Jyby1hbnRkL3BhZ2luYXRpb24nO1xuaW1wb3J0IHsgTnpUYWJsZURhdGFTZXJ2aWNlIH0gZnJvbSAnLi4vdGFibGUtZGF0YS5zZXJ2aWNlJztcbmltcG9ydCB7IE56VGFibGVTdHlsZVNlcnZpY2UgfSBmcm9tICcuLi90YWJsZS1zdHlsZS5zZXJ2aWNlJztcbmltcG9ydCB7IE56VGFibGVEYXRhLCBOelRhYmxlTGF5b3V0LCBOelRhYmxlUGFnaW5hdGlvblBvc2l0aW9uLCBOelRhYmxlUXVlcnlQYXJhbXMsIE56VGFibGVTaXplIH0gZnJvbSAnLi4vdGFibGUudHlwZXMnO1xuaW1wb3J0IHsgTnpUYWJsZUlubmVyU2Nyb2xsQ29tcG9uZW50IH0gZnJvbSAnLi90YWJsZS1pbm5lci1zY3JvbGwuY29tcG9uZW50JztcbmltcG9ydCB7IE56VGFibGVWaXJ0dWFsU2Nyb2xsRGlyZWN0aXZlIH0gZnJvbSAnLi90YWJsZS12aXJ0dWFsLXNjcm9sbC5kaXJlY3RpdmUnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpUYWJsZUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95LCBPbkNoYW5nZXMsIEFmdGVyVmlld0luaXQge1xuICAgIHByaXZhdGUgZWxlbWVudFJlZjtcbiAgICBwcml2YXRlIG56UmVzaXplT2JzZXJ2ZXI7XG4gICAgcHJpdmF0ZSBuekNvbmZpZ1NlcnZpY2U7XG4gICAgcHJpdmF0ZSBjZHI7XG4gICAgcHJpdmF0ZSBuelRhYmxlU3R5bGVTZXJ2aWNlO1xuICAgIHByaXZhdGUgbnpUYWJsZURhdGFTZXJ2aWNlO1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9uekZyb250UGFnaW5hdGlvbjogQm9vbGVhbklucHV0O1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9uelRlbXBsYXRlTW9kZTogQm9vbGVhbklucHV0O1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9uelNob3dQYWdpbmF0aW9uOiBCb29sZWFuSW5wdXQ7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX256TG9hZGluZzogQm9vbGVhbklucHV0O1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9uekJvcmRlcmVkOiBCb29sZWFuSW5wdXQ7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX256U2hvd1NpemVDaGFuZ2VyOiBCb29sZWFuSW5wdXQ7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX256SGlkZU9uU2luZ2xlUGFnZTogQm9vbGVhbklucHV0O1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9uelNob3dRdWlja0p1bXBlcjogQm9vbGVhbklucHV0O1xuICAgIHN0YXRpYyBuZ0FjY2VwdElucHV0VHlwZV9uelNpbXBsZTogQm9vbGVhbklucHV0O1xuICAgIG56VGFibGVMYXlvdXQ6IE56VGFibGVMYXlvdXQ7XG4gICAgbnpTaG93VG90YWw6IFRlbXBsYXRlUmVmPHtcbiAgICAgICAgJGltcGxpY2l0OiBudW1iZXI7XG4gICAgICAgIHJhbmdlOiBbbnVtYmVyLCBudW1iZXJdO1xuICAgIH0+IHwgbnVsbDtcbiAgICBuekl0ZW1SZW5kZXI6IFRlbXBsYXRlUmVmPFBhZ2luYXRpb25JdGVtUmVuZGVyQ29udGV4dD4gfCBudWxsO1xuICAgIG56TG9hZGluZ0luZGljYXRvcjogVGVtcGxhdGVSZWY8TnpTYWZlQW55PiB8IG51bGw7XG4gICAgbnpUaXRsZTogc3RyaW5nIHwgVGVtcGxhdGVSZWY8TnpTYWZlQW55PiB8IG51bGw7XG4gICAgbnpGb290ZXI6IHN0cmluZyB8IFRlbXBsYXRlUmVmPE56U2FmZUFueT4gfCBudWxsO1xuICAgIG56Tm9SZXN1bHQ6IHN0cmluZyB8IFRlbXBsYXRlUmVmPE56U2FmZUFueT4gfCB1bmRlZmluZWQ7XG4gICAgbnpQYWdlU2l6ZU9wdGlvbnM6IG51bWJlcltdO1xuICAgIG56VmlydHVhbEl0ZW1TaXplOiBudW1iZXI7XG4gICAgbnpWaXJ0dWFsTWF4QnVmZmVyUHg6IG51bWJlcjtcbiAgICBuelZpcnR1YWxNaW5CdWZmZXJQeDogbnVtYmVyO1xuICAgIG56VmlydHVhbEZvclRyYWNrQnk6IFRyYWNrQnlGdW5jdGlvbjxOelRhYmxlRGF0YT47XG4gICAgbnpMb2FkaW5nRGVsYXk6IG51bWJlcjtcbiAgICBuelBhZ2VJbmRleDogbnVtYmVyO1xuICAgIG56UGFnZVNpemU6IG51bWJlcjtcbiAgICBuelRvdGFsOiBudW1iZXI7XG4gICAgbnpXaWR0aENvbmZpZzogQXJyYXk8c3RyaW5nIHwgbnVsbD47XG4gICAgbnpEYXRhOiBOelRhYmxlRGF0YVtdO1xuICAgIG56UGFnaW5hdGlvblBvc2l0aW9uOiBOelRhYmxlUGFnaW5hdGlvblBvc2l0aW9uO1xuICAgIG56U2Nyb2xsOiB7XG4gICAgICAgIHg/OiBzdHJpbmcgfCBudWxsO1xuICAgICAgICB5Pzogc3RyaW5nIHwgbnVsbDtcbiAgICB9O1xuICAgIG56RnJvbnRQYWdpbmF0aW9uOiBib29sZWFuO1xuICAgIG56VGVtcGxhdGVNb2RlOiBib29sZWFuO1xuICAgIG56U2hvd1BhZ2luYXRpb246IGJvb2xlYW47XG4gICAgbnpMb2FkaW5nOiBib29sZWFuO1xuICAgIG56Qm9yZGVyZWQ6IGJvb2xlYW47XG4gICAgbnpTaXplOiBOelRhYmxlU2l6ZTtcbiAgICBuelNob3dTaXplQ2hhbmdlcjogYm9vbGVhbjtcbiAgICBuekhpZGVPblNpbmdsZVBhZ2U6IGJvb2xlYW47XG4gICAgbnpTaG93UXVpY2tKdW1wZXI6IGJvb2xlYW47XG4gICAgbnpTaW1wbGU6IGJvb2xlYW47XG4gICAgcmVhZG9ubHkgbnpQYWdlU2l6ZUNoYW5nZTogRXZlbnRFbWl0dGVyPG51bWJlcj47XG4gICAgcmVhZG9ubHkgbnpQYWdlSW5kZXhDaGFuZ2U6IEV2ZW50RW1pdHRlcjxudW1iZXI+O1xuICAgIHJlYWRvbmx5IG56UXVlcnlQYXJhbXM6IEV2ZW50RW1pdHRlcjxOelRhYmxlUXVlcnlQYXJhbXM+O1xuICAgIHJlYWRvbmx5IG56Q3VycmVudFBhZ2VEYXRhQ2hhbmdlOiBFdmVudEVtaXR0ZXI8YW55W10+O1xuICAgIC8qKiBwdWJsaWMgZGF0YSBmb3IgbmdGb3IgdHIgKi9cbiAgICBkYXRhOiBOelRhYmxlRGF0YVtdO1xuICAgIGNka1ZpcnR1YWxTY3JvbGxWaWV3cG9ydDogQ2RrVmlydHVhbFNjcm9sbFZpZXdwb3J0O1xuICAgIHNjcm9sbFg6IHN0cmluZyB8IG51bGw7XG4gICAgc2Nyb2xsWTogc3RyaW5nIHwgbnVsbDtcbiAgICB0aGVhZFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxOelNhZmVBbnk+IHwgbnVsbDtcbiAgICBsaXN0T2ZDb2xXaWR0aDogQXJyYXk8c3RyaW5nIHwgbnVsbD47XG4gICAgaGFzRml4TGVmdDogYm9vbGVhbjtcbiAgICBoYXNGaXhSaWdodDogYm9vbGVhbjtcbiAgICBwcml2YXRlIGRlc3Ryb3kkO1xuICAgIHByaXZhdGUgbG9hZGluZyQ7XG4gICAgcHJpdmF0ZSB0ZW1wbGF0ZU1vZGUkO1xuICAgIG56VmlydHVhbFNjcm9sbERpcmVjdGl2ZTogTnpUYWJsZVZpcnR1YWxTY3JvbGxEaXJlY3RpdmU7XG4gICAgbnpUYWJsZUlubmVyU2Nyb2xsQ29tcG9uZW50OiBOelRhYmxlSW5uZXJTY3JvbGxDb21wb25lbnQ7XG4gICAgdmVydGljYWxTY3JvbGxCYXJXaWR0aDogbnVtYmVyO1xuICAgIG9uUGFnZVNpemVDaGFuZ2Uoc2l6ZTogbnVtYmVyKTogdm9pZDtcbiAgICBvblBhZ2VJbmRleENoYW5nZShpbmRleDogbnVtYmVyKTogdm9pZDtcbiAgICBjb25zdHJ1Y3RvcihlbGVtZW50UmVmOiBFbGVtZW50UmVmLCBuelJlc2l6ZU9ic2VydmVyOiBOelJlc2l6ZU9ic2VydmVyLCBuekNvbmZpZ1NlcnZpY2U6IE56Q29uZmlnU2VydmljZSwgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZiwgbnpUYWJsZVN0eWxlU2VydmljZTogTnpUYWJsZVN0eWxlU2VydmljZSwgbnpUYWJsZURhdGFTZXJ2aWNlOiBOelRhYmxlRGF0YVNlcnZpY2UpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbiJdfQ==