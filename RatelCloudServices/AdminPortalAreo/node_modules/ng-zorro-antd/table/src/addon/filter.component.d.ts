/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectorRef, EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef } from '@angular/core';
import { NzSafeAny } from 'ng-zorro-antd/core/types';
import { NzI18nInterface, NzI18nService } from 'ng-zorro-antd/i18n';
import { NzTableFilterList } from '../table.types';
import * as ɵngcc0 from '@angular/core';
interface NzThItemInterface {
    text: string;
    value: NzSafeAny;
    checked: boolean;
}
export declare class NzTableFilterComponent implements OnChanges, OnDestroy, OnInit {
    private cdr;
    private i18n;
    contentTemplate: TemplateRef<NzSafeAny> | null;
    customFilter: boolean;
    extraTemplate: TemplateRef<NzSafeAny> | null;
    filterMultiple: boolean;
    listOfFilter: NzTableFilterList;
    readonly filterChange: EventEmitter<any>;
    private destroy$;
    locale: NzI18nInterface['Table'];
    isChanged: boolean;
    isChecked: boolean;
    isVisible: boolean;
    listOfParsedFilter: NzThItemInterface[];
    trackByValue(_: number, item: NzThItemInterface): NzSafeAny;
    check(filter: NzThItemInterface): void;
    confirm(): void;
    reset(): void;
    onVisibleChange(value: boolean): void;
    emitFilterData(): void;
    parseListOfFilter(listOfFilter: NzTableFilterList, reset?: boolean): NzThItemInterface[];
    getCheckedStatus(listOfParsedFilter: NzThItemInterface[]): boolean;
    constructor(cdr: ChangeDetectorRef, i18n: NzI18nService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzTableFilterComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzTableFilterComponent, "nz-table-filter", never, {
    "contentTemplate": "contentTemplate";
    "customFilter": "customFilter";
    "extraTemplate": "extraTemplate";
    "filterMultiple": "filterMultiple";
    "listOfFilter": "listOfFilter";
}, {
    "filterChange": "filterChange";
}, never>;
}
export {};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsdGVyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJmaWx0ZXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7OztBQVdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFnQ0EiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWxpYmFiYS5jb20gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqXG4gKiBVc2Ugb2YgdGhpcyBzb3VyY2UgY29kZSBpcyBnb3Zlcm5lZCBieSBhbiBNSVQtc3R5bGUgbGljZW5zZSB0aGF0IGNhbiBiZVxuICogZm91bmQgaW4gdGhlIExJQ0VOU0UgZmlsZSBhdCBodHRwczovL2dpdGh1Yi5jb20vTkctWk9SUk8vbmctem9ycm8tYW50ZC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IENoYW5nZURldGVjdG9yUmVmLCBFdmVudEVtaXR0ZXIsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBPbkluaXQsIFNpbXBsZUNoYW5nZXMsIFRlbXBsYXRlUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOelNhZmVBbnkgfSBmcm9tICduZy16b3Jyby1hbnRkL2NvcmUvdHlwZXMnO1xuaW1wb3J0IHsgTnpJMThuSW50ZXJmYWNlLCBOekkxOG5TZXJ2aWNlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9pMThuJztcbmltcG9ydCB7IE56VGFibGVGaWx0ZXJMaXN0IH0gZnJvbSAnLi4vdGFibGUudHlwZXMnO1xuaW50ZXJmYWNlIE56VGhJdGVtSW50ZXJmYWNlIHtcbiAgICB0ZXh0OiBzdHJpbmc7XG4gICAgdmFsdWU6IE56U2FmZUFueTtcbiAgICBjaGVja2VkOiBib29sZWFuO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpUYWJsZUZpbHRlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgT25EZXN0cm95LCBPbkluaXQge1xuICAgIHByaXZhdGUgY2RyO1xuICAgIHByaXZhdGUgaTE4bjtcbiAgICBjb250ZW50VGVtcGxhdGU6IFRlbXBsYXRlUmVmPE56U2FmZUFueT4gfCBudWxsO1xuICAgIGN1c3RvbUZpbHRlcjogYm9vbGVhbjtcbiAgICBleHRyYVRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxOelNhZmVBbnk+IHwgbnVsbDtcbiAgICBmaWx0ZXJNdWx0aXBsZTogYm9vbGVhbjtcbiAgICBsaXN0T2ZGaWx0ZXI6IE56VGFibGVGaWx0ZXJMaXN0O1xuICAgIHJlYWRvbmx5IGZpbHRlckNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcHJpdmF0ZSBkZXN0cm95JDtcbiAgICBsb2NhbGU6IE56STE4bkludGVyZmFjZVsnVGFibGUnXTtcbiAgICBpc0NoYW5nZWQ6IGJvb2xlYW47XG4gICAgaXNDaGVja2VkOiBib29sZWFuO1xuICAgIGlzVmlzaWJsZTogYm9vbGVhbjtcbiAgICBsaXN0T2ZQYXJzZWRGaWx0ZXI6IE56VGhJdGVtSW50ZXJmYWNlW107XG4gICAgdHJhY2tCeVZhbHVlKF86IG51bWJlciwgaXRlbTogTnpUaEl0ZW1JbnRlcmZhY2UpOiBOelNhZmVBbnk7XG4gICAgY2hlY2soZmlsdGVyOiBOelRoSXRlbUludGVyZmFjZSk6IHZvaWQ7XG4gICAgY29uZmlybSgpOiB2b2lkO1xuICAgIHJlc2V0KCk6IHZvaWQ7XG4gICAgb25WaXNpYmxlQ2hhbmdlKHZhbHVlOiBib29sZWFuKTogdm9pZDtcbiAgICBlbWl0RmlsdGVyRGF0YSgpOiB2b2lkO1xuICAgIHBhcnNlTGlzdE9mRmlsdGVyKGxpc3RPZkZpbHRlcjogTnpUYWJsZUZpbHRlckxpc3QsIHJlc2V0PzogYm9vbGVhbik6IE56VGhJdGVtSW50ZXJmYWNlW107XG4gICAgZ2V0Q2hlY2tlZFN0YXR1cyhsaXN0T2ZQYXJzZWRGaWx0ZXI6IE56VGhJdGVtSW50ZXJmYWNlW10pOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKGNkcjogQ2hhbmdlRGV0ZWN0b3JSZWYsIGkxOG46IE56STE4blNlcnZpY2UpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbmV4cG9ydCB7fTtcbiJdfQ==