/**
 * @license
 * Copyright Alibaba.com All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE
 */
import { ChangeDetectorRef, ElementRef, OnChanges, SimpleChanges } from '@angular/core';
import { BooleanInput, NgStyleInterface } from 'ng-zorro-antd/core/types';
import { NzTooltipDirective } from 'ng-zorro-antd/tooltip';
import { NzSliderService } from './slider.service';
import { NzSliderShowTooltip } from './typings';
import * as ɵngcc0 from '@angular/core';
export declare class NzSliderHandleComponent implements OnChanges {
    private sliderService;
    private cdr;
    static ngAcceptInputType_active: BooleanInput;
    handleEl: ElementRef;
    tooltip: NzTooltipDirective;
    vertical: string;
    offset: number;
    value: number;
    tooltipVisible: NzSliderShowTooltip;
    tooltipPlacement: string;
    tooltipFormatter: (value: number) => string;
    active: boolean;
    tooltipTitle: string;
    style: NgStyleInterface;
    constructor(sliderService: NzSliderService, cdr: ChangeDetectorRef);
    ngOnChanges(changes: SimpleChanges): void;
    enterHandle: () => void;
    leaveHandle: () => void;
    focus(): void;
    private toggleTooltip;
    private updateTooltipTitle;
    private updateTooltipPosition;
    private updateStyle;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NzSliderHandleComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NzSliderHandleComponent, "nz-slider-handle", ["nzSliderHandle"], {
    "tooltipVisible": "tooltipVisible";
    "active": "active";
    "vertical": "vertical";
    "offset": "offset";
    "value": "value";
    "tooltipPlacement": "tooltipPlacement";
    "tooltipFormatter": "tooltipFormatter";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGFuZGxlLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJoYW5kbGUuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7QUFZQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQXdCQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBbGliYWJhLmNvbSBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9ORy1aT1JSTy9uZy16b3Jyby1hbnRkL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIEVsZW1lbnRSZWYsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQm9vbGVhbklucHV0LCBOZ1N0eWxlSW50ZXJmYWNlIH0gZnJvbSAnbmctem9ycm8tYW50ZC9jb3JlL3R5cGVzJztcbmltcG9ydCB7IE56VG9vbHRpcERpcmVjdGl2ZSB9IGZyb20gJ25nLXpvcnJvLWFudGQvdG9vbHRpcCc7XG5pbXBvcnQgeyBOelNsaWRlclNlcnZpY2UgfSBmcm9tICcuL3NsaWRlci5zZXJ2aWNlJztcbmltcG9ydCB7IE56U2xpZGVyU2hvd1Rvb2x0aXAgfSBmcm9tICcuL3R5cGluZ3MnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTnpTbGlkZXJIYW5kbGVDb21wb25lbnQgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xuICAgIHByaXZhdGUgc2xpZGVyU2VydmljZTtcbiAgICBwcml2YXRlIGNkcjtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfYWN0aXZlOiBCb29sZWFuSW5wdXQ7XG4gICAgaGFuZGxlRWw6IEVsZW1lbnRSZWY7XG4gICAgdG9vbHRpcDogTnpUb29sdGlwRGlyZWN0aXZlO1xuICAgIHZlcnRpY2FsOiBzdHJpbmc7XG4gICAgb2Zmc2V0OiBudW1iZXI7XG4gICAgdmFsdWU6IG51bWJlcjtcbiAgICB0b29sdGlwVmlzaWJsZTogTnpTbGlkZXJTaG93VG9vbHRpcDtcbiAgICB0b29sdGlwUGxhY2VtZW50OiBzdHJpbmc7XG4gICAgdG9vbHRpcEZvcm1hdHRlcjogKHZhbHVlOiBudW1iZXIpID0+IHN0cmluZztcbiAgICBhY3RpdmU6IGJvb2xlYW47XG4gICAgdG9vbHRpcFRpdGxlOiBzdHJpbmc7XG4gICAgc3R5bGU6IE5nU3R5bGVJbnRlcmZhY2U7XG4gICAgY29uc3RydWN0b3Ioc2xpZGVyU2VydmljZTogTnpTbGlkZXJTZXJ2aWNlLCBjZHI6IENoYW5nZURldGVjdG9yUmVmKTtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBlbnRlckhhbmRsZTogKCkgPT4gdm9pZDtcbiAgICBsZWF2ZUhhbmRsZTogKCkgPT4gdm9pZDtcbiAgICBmb2N1cygpOiB2b2lkO1xuICAgIHByaXZhdGUgdG9nZ2xlVG9vbHRpcDtcbiAgICBwcml2YXRlIHVwZGF0ZVRvb2x0aXBUaXRsZTtcbiAgICBwcml2YXRlIHVwZGF0ZVRvb2x0aXBQb3NpdGlvbjtcbiAgICBwcml2YXRlIHVwZGF0ZVN0eWxlO1xufVxuIl19