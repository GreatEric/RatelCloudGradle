import * as tslib_1 from "tslib";
import { Component, ElementRef, ViewChild, Inject } from '@angular/core';
import { ScreenshotComponent } from './screenshot.component';
/**
 * Custom template of screenshot toolbox, connent with screenshot
 */
let ScreenshotToolboxComponent = class ScreenshotToolboxComponent {
    constructor(parent) {
        this.parent = parent;
        this.hasContent = false;
        // const template = `<div class="screenshot-toolbox">${el.nativeElement.children().html()}</div>`;
        // renderer.selectRootElement(template);
        // el.nativeElement.remove();
    }
    cancel() {
        this.parent.cancel();
    }
    download() {
        this.parent.download();
    }
    ngAfterViewInit() {
        window.setTimeout(() => {
            this.hasContent = this.wrapper.nativeElement.children.length > 0;
        });
    }
};
ScreenshotToolboxComponent.ctorParameters = () => [
    { type: ScreenshotComponent, decorators: [{ type: Inject, args: [ScreenshotComponent,] }] }
];
tslib_1.__decorate([
    ViewChild('wrapper', { static: false }),
    tslib_1.__metadata("design:type", ElementRef)
], ScreenshotToolboxComponent.prototype, "wrapper", void 0);
ScreenshotToolboxComponent = tslib_1.__decorate([
    Component({
        selector: 'ng2-screenshot-toolbox',
        template: `
        <div class="screenshot-toolbox" [hidden]="!parent.showToolbox">
            <div #wrapper>
                <ng-content></ng-content>
            </div>
            <div *ngIf="!hasContent">
                <button class="btn" type="button" (click)="cancel()">
                    Cancel
                </button>
                <button class="btn" type="button" (click)="download()">
                    Download
                </button>
            </div>
        </div>
    `,
        styles: ["/*! Angular Screenshot - v0.1.0 - http://weihanchen.github.io/ng2-screenshot - (c) 2017 weihanchen - MIT */.screenshot-toolbox{width:100%}.screenshot-toolbox button{margin:.2em}.screenshot-toolbox .btn{position:relative;padding:.2em .4em;overflow:hidden;border-width:0;outline:0;border-radius:.2em;box-shadow:0 .1em .2em #4f4f4f;background-color:#e6e3e3;color:#4f4f4f;-webkit-transition:background-color .3s;transition:background-color .3s}.screenshot-toolbox .btn:focus,.screenshot-toolbox .btn:hover{background:#cdcccc}.screenshot-toolbox .btn>*{position:relative}.screenshot-toolbox .btn:before{content:\"\";position:absolute;top:50%;left:50%;display:block;width:0;padding-top:0;border-radius:100%;background-color:rgba(205,204,204,.3);-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.screenshot-toolbox .btn:active:before{width:120%;padding-top:120%;-webkit-transition:width .2s ease-out,padding-top .2s ease-out;transition:width .2s ease-out,padding-top .2s ease-out}.screenshot-toolbox .btn-navy{background-color:#1d9e74}.screenshot-toolbox .btn-navy:focus,.screenshot-toolbox .btn-navy:hover{background-color:#138661}.screenshot-toolbox-custom{visibility:hidden}"]
    }),
    tslib_1.__param(0, Inject(ScreenshotComponent)),
    tslib_1.__metadata("design:paramtypes", [ScreenshotComponent])
], ScreenshotToolboxComponent);
export { ScreenshotToolboxComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NyZWVuc2hvdC10b29sYm94LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25nMi1zY3JlZW5zaG90LyIsInNvdXJjZXMiOlsibGliL3NjcmVlbnNob3QtdG9vbGJveC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFNBQVMsRUFBaUIsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3hGLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRTdEOztHQUVHO0FBb0JILElBQWEsMEJBQTBCLEdBQXZDLE1BQWEsMEJBQTBCO0lBR25DLFlBQWdELE1BQTJCO1FBQTNCLFdBQU0sR0FBTixNQUFNLENBQXFCO1FBRDNFLGVBQVUsR0FBRyxLQUFLLENBQUM7UUFFZixrR0FBa0c7UUFDbEcsd0NBQXdDO1FBQ3hDLDZCQUE2QjtJQUNqQyxDQUFDO0lBRUQsTUFBTTtRQUNGLElBQUksQ0FBQyxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVELFFBQVE7UUFDSixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFRCxlQUFlO1FBQ1gsTUFBTSxDQUFDLFVBQVUsQ0FBQyxHQUFHLEVBQUU7WUFDbkIsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztRQUNyRSxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7Q0FDSixDQUFBOztZQW5CMkQsbUJBQW1CLHVCQUE5RCxNQUFNLFNBQUMsbUJBQW1COztBQUZFO0lBQXhDLFNBQVMsQ0FBQyxTQUFTLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLENBQUM7c0NBQVUsVUFBVTsyREFBQztBQURwRCwwQkFBMEI7SUFuQnRDLFNBQVMsQ0FBQztRQUNQLFFBQVEsRUFBRSx3QkFBd0I7UUFDbEMsUUFBUSxFQUFFOzs7Ozs7Ozs7Ozs7OztLQWNUOztLQUVKLENBQUM7SUFJZSxtQkFBQSxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQTs2Q0FBZ0IsbUJBQW1CO0dBSGxFLDBCQUEwQixDQXNCdEM7U0F0QlksMEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBWaWV3Q2hpbGQsIEFmdGVyVmlld0luaXQsIEluamVjdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTY3JlZW5zaG90Q29tcG9uZW50IH0gZnJvbSAnLi9zY3JlZW5zaG90LmNvbXBvbmVudCc7XHJcblxyXG4vKipcclxuICogQ3VzdG9tIHRlbXBsYXRlIG9mIHNjcmVlbnNob3QgdG9vbGJveCwgY29ubmVudCB3aXRoIHNjcmVlbnNob3RcclxuICovXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICduZzItc2NyZWVuc2hvdC10b29sYm94JyxcclxuICAgIHRlbXBsYXRlOiBgXHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInNjcmVlbnNob3QtdG9vbGJveFwiIFtoaWRkZW5dPVwiIXBhcmVudC5zaG93VG9vbGJveFwiPlxyXG4gICAgICAgICAgICA8ZGl2ICN3cmFwcGVyPlxyXG4gICAgICAgICAgICAgICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgPGRpdiAqbmdJZj1cIiFoYXNDb250ZW50XCI+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuXCIgdHlwZT1cImJ1dHRvblwiIChjbGljayk9XCJjYW5jZWwoKVwiPlxyXG4gICAgICAgICAgICAgICAgICAgIENhbmNlbFxyXG4gICAgICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuXCIgdHlwZT1cImJ1dHRvblwiIChjbGljayk9XCJkb3dubG9hZCgpXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgRG93bmxvYWRcclxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgIGAsXHJcbiAgICBzdHlsZVVybHM6IFsnLi9zY3JlZW5zaG90LXRvb2xib3guY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgU2NyZWVuc2hvdFRvb2xib3hDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcclxuICAgIEBWaWV3Q2hpbGQoJ3dyYXBwZXInLCB7IHN0YXRpYzogZmFsc2UgfSkgd3JhcHBlcjogRWxlbWVudFJlZjtcclxuICAgIGhhc0NvbnRlbnQgPSBmYWxzZTtcclxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoU2NyZWVuc2hvdENvbXBvbmVudCkgcHVibGljIHBhcmVudDogU2NyZWVuc2hvdENvbXBvbmVudCkge1xyXG4gICAgICAgIC8vIGNvbnN0IHRlbXBsYXRlID0gYDxkaXYgY2xhc3M9XCJzY3JlZW5zaG90LXRvb2xib3hcIj4ke2VsLm5hdGl2ZUVsZW1lbnQuY2hpbGRyZW4oKS5odG1sKCl9PC9kaXY+YDtcclxuICAgICAgICAvLyByZW5kZXJlci5zZWxlY3RSb290RWxlbWVudCh0ZW1wbGF0ZSk7XHJcbiAgICAgICAgLy8gZWwubmF0aXZlRWxlbWVudC5yZW1vdmUoKTtcclxuICAgIH1cclxuXHJcbiAgICBjYW5jZWwoKSB7XHJcbiAgICAgICAgdGhpcy5wYXJlbnQuY2FuY2VsKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZG93bmxvYWQoKSB7XHJcbiAgICAgICAgdGhpcy5wYXJlbnQuZG93bmxvYWQoKTtcclxuICAgIH1cclxuXHJcbiAgICBuZ0FmdGVyVmlld0luaXQoKSB7XHJcbiAgICAgICAgd2luZG93LnNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLmhhc0NvbnRlbnQgPSB0aGlzLndyYXBwZXIubmF0aXZlRWxlbWVudC5jaGlsZHJlbi5sZW5ndGggPiAwO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==