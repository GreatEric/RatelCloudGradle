{"version":3,"file":"ng2-screenshot.js","sources":["ng:/ng2-screenshot/lib/screenshot.class.ts","ng:/ng2-screenshot/lib/screenshot.utils.ts","ng:/ng2-screenshot/lib/screenshot.component.ts","ng:/ng2-screenshot/lib/screenshot-toolbox.component.ts","ng:/ng2-screenshot/lib/screenshot.module.ts","ng:/ng2-screenshot/ng2-screenshot.ts"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":"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","sourcesContent":["import { ToolboxOptions } from './screenshot.interface';\r\nimport { Injectable } from '@angular/core';\r\n@Injectable()\r\nclass ToolboxDefaultOptions implements ToolboxOptions {\r\n    filename: string = 'screenshot.png';\r\n    cancelText: string = 'Cancel';\r\n    downloadText: string = 'Download';\r\n}\r\n\r\n@Injectable()\r\nclass Colors {\r\n    gray: string = '#898b89';\r\n    lightGray: string = '#e6e3e3';\r\n}\r\n\r\n@Injectable()\r\nclass HightLevelZindex {\r\n    top: number = 1;\r\n    second: number = 0;\r\n}\r\n\r\nexport { ToolboxDefaultOptions, Colors, HightLevelZindex };\r\n","'use strict';\r\nimport { Rect } from './screenshot.interface';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DOMProcess {\r\n    private domURL = window.URL;\r\n    private imageType = 'image/png';\r\n    constructor() {}\r\n    async appendToBody(element: HTMLCanvasElement): Promise<HTMLCanvasElement> {\r\n        document.body.appendChild(element);\r\n        return element;\r\n    }\r\n\r\n    async canvasToImage(canvas: HTMLCanvasElement): Promise<HTMLImageElement> {\r\n        const url: string = canvas.toDataURL(this.imageType);\r\n        return await this.dataUrlToImage(url);\r\n    }\r\n\r\n    clearCanvasRect(canvas: HTMLCanvasElement) {\r\n        const context: CanvasRenderingContext2D = canvas.getContext('2d');\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n    }\r\n\r\n    async dataUrlToImage(url: string): Promise<any> {\r\n        return new Promise((resolve, reject) => {\r\n            const image = new Image();\r\n            image.onload = () => {\r\n                resolve(image);\r\n            };\r\n            image.onerror = reject;\r\n            image.src = url;\r\n        });\r\n    }\r\n\r\n    async clipImageToCanvas(\r\n        image: HTMLImageElement,\r\n        clipStartX: number,\r\n        clipStartY: number,\r\n        clipWidth: number,\r\n        clipHeight: number\r\n    ) {\r\n        const canvas: HTMLCanvasElement = await this.createCanvas(Math.abs(clipWidth), Math.abs(clipHeight));\r\n        const context: CanvasRenderingContext2D = canvas.getContext('2d');\r\n        context.drawImage(image, clipStartX, clipStartY, clipWidth, clipHeight, 0, 0, canvas.width, canvas.height);\r\n        this.remove(image);\r\n        return canvas;\r\n    }\r\n\r\n    async createCanvas(width: number, height: number): Promise<HTMLCanvasElement> {\r\n        const canvas: HTMLCanvasElement = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        return canvas;\r\n    }\r\n\r\n    downloadByUrl(url: string, filename: string) {\r\n        const downloadLink: HTMLAnchorElement = document.createElement('a');\r\n        downloadLink.href = url;\r\n        downloadLink.download = filename;\r\n        downloadLink.target = '_blank';\r\n        downloadLink.click();\r\n        downloadLink.remove();\r\n        this.domURL.revokeObjectURL(url);\r\n    }\r\n\r\n    async downloadCanvas(canvas: HTMLCanvasElement, filename: string): Promise<HTMLCanvasElement> {\r\n        const downloadUrl = canvas.toDataURL(this.imageType);\r\n        this.downloadByUrl(downloadUrl, filename);\r\n        return canvas;\r\n    }\r\n\r\n    getStyle(element: HTMLElement, property: string) {\r\n        const styles: any = window.getComputedStyle(element);\r\n        return styles[property];\r\n    }\r\n\r\n    remove(element: HTMLElement) {\r\n        if (element) {\r\n            element.remove();\r\n        }\r\n        element = null;\r\n    }\r\n\r\n    isTransparent(element: HTMLElement): boolean {\r\n        const backgroundColor: string = window.getComputedStyle(element).backgroundColor;\r\n        return backgroundColor === 'transparent' || backgroundColor === '' || backgroundColor === 'rgba(0, 0, 0, 0)';\r\n    }\r\n\r\n    async listenInteractiveCanvas(\r\n        canvas: HTMLCanvasElement,\r\n        rectBackground: string | CanvasGradient | CanvasPattern,\r\n        mouseupListener: any,\r\n        mousedownListener: any,\r\n        contextmenuListener: any\r\n    ): Promise<HTMLCanvasElement> {\r\n        const context: CanvasRenderingContext2D = canvas.getContext('2d');\r\n        const rect: Rect = {\r\n            startX: 0,\r\n            startY: 0,\r\n            w: 0,\r\n            h: 0\r\n        };\r\n        let dragging = false;\r\n\r\n        const draw = () => {\r\n            context.beginPath();\r\n            context.fillStyle = rectBackground;\r\n            context.fillRect(rect.startX, rect.startY, rect.w, rect.h);\r\n            context.closePath();\r\n        };\r\n\r\n        const mousedown = (e: MouseEvent) => {\r\n            context.clearRect(0, 0, canvas.width, canvas.height);\r\n            rect.startX = e.pageX - canvas.offsetLeft;\r\n            rect.startY = e.pageY - canvas.offsetTop;\r\n            mousedownListener(rect);\r\n            rect.w = 0;\r\n            rect.h = 0;\r\n            dragging = true;\r\n        };\r\n\r\n        const mousemove = (e: MouseEvent) => {\r\n            if (dragging) {\r\n                rect.w = e.pageX - canvas.offsetLeft - rect.startX;\r\n                rect.h = e.pageY - canvas.offsetTop - rect.startY;\r\n                context.clearRect(0, 0, canvas.width, canvas.height);\r\n                draw();\r\n            }\r\n        };\r\n\r\n        const mouseup = () => {\r\n            dragging = false;\r\n            mouseupListener(canvas, rect);\r\n        };\r\n\r\n        const contextmenu = (e: MouseEvent) => {\r\n            contextmenuListener();\r\n            e.preventDefault();\r\n            return false;\r\n        };\r\n\r\n        const touchStart = (e: TouchEvent) => {\r\n            e.preventDefault();\r\n            const touch = e.changedTouches[0];\r\n            const mouseEvent = new MouseEvent('mousedown', {\r\n                clientX: touch.pageX,\r\n                clientY: touch.pageY\r\n            });\r\n            canvas.dispatchEvent(mouseEvent);\r\n        };\r\n\r\n        const touched = () => {\r\n            const mouseEvent = new MouseEvent('mouseup', {});\r\n            canvas.dispatchEvent(mouseEvent);\r\n        };\r\n\r\n        const touchMove = (e: TouchEvent) => {\r\n            e.preventDefault();\r\n            const touch = e.changedTouches[0];\r\n            const mouseEvent = new MouseEvent('mousemove', {\r\n                clientX: touch.pageX,\r\n                clientY: touch.pageY\r\n            });\r\n            canvas.dispatchEvent(mouseEvent);\r\n        };\r\n\r\n        canvas.addEventListener('mousedown', mousedown, false);\r\n        canvas.addEventListener('mouseup', mouseup, false);\r\n        canvas.addEventListener('mousemove', mousemove, false);\r\n        canvas.addEventListener('touchstart', touchStart, false);\r\n        canvas.addEventListener('touchend', touched, false);\r\n        canvas.addEventListener('touchmove', touchMove, false);\r\n        canvas.addEventListener('contextmenu', contextmenu, false);\r\n        document.body.addEventListener('touchmove', event => event.preventDefault(), false);\r\n        return canvas;\r\n    }\r\n\r\n    async setCanvasStyle(\r\n        canvas: HTMLCanvasElement,\r\n        left: number,\r\n        top: number,\r\n        background: string,\r\n        zIndex: string\r\n    ): Promise<HTMLCanvasElement> {\r\n        canvas.style.cursor = 'crosshair';\r\n        canvas.style.position = 'absolute';\r\n        canvas.style.left = left + 'px';\r\n        canvas.style.top = top + 'px';\r\n        canvas.style.background = background;\r\n        canvas.style.zIndex = zIndex;\r\n        canvas.style.opacity = '0.5';\r\n        return canvas;\r\n    }\r\n\r\n    async setToolboxPositionStyle(toolboxElement: HTMLElement, left: number, top: number): Promise<HTMLElement> {\r\n        toolboxElement.style.left = left + 'px';\r\n        toolboxElement.style.top = top + 'px';\r\n        return toolboxElement;\r\n    }\r\n\r\n    async setToolboxStackStyle(toolboxElement: HTMLElement, zIndex: string): Promise<HTMLElement> {\r\n        toolboxElement.style.position = 'absolute';\r\n        toolboxElement.style.zIndex = zIndex;\r\n        return toolboxElement;\r\n    }\r\n}\r\n","import { Component, Input, Inject, forwardRef, OnInit, OnChanges, Output, EventEmitter, ViewChild, ElementRef } from '@angular/core';\r\nimport { ToolboxOptions, Ng2ScreenshotAPI, Rect, ToolboxPosition } from './screenshot.interface';\r\nimport { Colors, HightLevelZindex, ToolboxDefaultOptions } from './screenshot.class';\r\nimport { DOMProcess } from './screenshot.utils';\r\nimport domtoimage from 'dom-to-image';\r\nimport * as jq from 'jquery';\r\nconst $ = jq;\r\n/**\r\n * Capture dom setion with indicate element\r\n */\r\n@Component({\r\n    selector: 'ng2-screenshot',\r\n    template: '<div #container><ng-content></ng-content></div>'\r\n})\r\nexport class ScreenshotComponent implements OnInit, OnChanges {\r\n    @ViewChild('container', { static: false }) container: ElementRef;\r\n    @Input('target') target: string;\r\n    @Input('isOpen') isOpen: boolean;\r\n    @Input('toolboxOptions') toolboxOptions: ToolboxOptions;\r\n    @Output('isOpenChange') isOpenChange = new EventEmitter();\r\n    @Output('apiInitialized') api = new EventEmitter<Ng2ScreenshotAPI>();\r\n    public showToolbox = false;\r\n    private cancelText = 'Cancel';\r\n    private downloadText = 'Download';\r\n    private filename = 'screenshot.png';\r\n    private toolboxMargin = 5;\r\n    private interactiveCanvas: HTMLCanvasElement;\r\n    private rect: Rect;\r\n    constructor(\r\n        @Inject(forwardRef(() => Colors)) private colors: Colors,\r\n        @Inject(forwardRef(() => HightLevelZindex)) private hightLevelZindex: HightLevelZindex,\r\n        @Inject(forwardRef(() => ToolboxDefaultOptions)) private defaultOptions: ToolboxDefaultOptions,\r\n        @Inject(forwardRef(() => DOMProcess)) private domprocess: DOMProcess,\r\n    ) { }\r\n    ngOnInit() {\r\n        if (!this.toolboxOptions) {\r\n            this.toolboxOptions = {\r\n                filename: this.defaultOptions.filename,\r\n                cancelText: this.defaultOptions.cancelText,\r\n                downloadText: this.defaultOptions.downloadText\r\n            };\r\n        }\r\n        this.api.emit({\r\n            cancel: this.cancel,\r\n            download: this.download,\r\n            downloadFull: this.downloadFull,\r\n            toPng: this.toPng\r\n        });\r\n        window.onresize = () => {\r\n            this.resizeCanvas();\r\n        };\r\n    }\r\n\r\n    ngOnChanges(item: any) {\r\n        const { isOpen, toolboxOptions } = item;\r\n        switch (isOpen.currentValue) {\r\n            case true:\r\n                this.openScreenshot();\r\n                break;\r\n            case false:\r\n                this.closeScreenshot();\r\n                break;\r\n            default:\r\n                this.closeScreenshot();\r\n                break;\r\n        }\r\n        if (toolboxOptions) {\r\n            this.cancelText = toolboxOptions.cancelText ? toolboxOptions.cancelText : this.cancelText;\r\n            this.downloadText = toolboxOptions.downloadText ? toolboxOptions.downloadText : this.downloadText;\r\n            this.filename = toolboxOptions.filename ? toolboxOptions.filename : this.filename;\r\n        }\r\n    }\r\n\r\n    private calculateToolboxPosition = (\r\n        offsetLeft: number,\r\n        offsetTop: number,\r\n        rect: Rect,\r\n        toolboxWidth: number,\r\n        toolboxHeight: number\r\n    ): ToolboxPosition => {\r\n        let left = offsetLeft + rect.startX + rect.w;\r\n        let top = offsetTop + rect.startY + rect.h;\r\n        if (rect.w >= 0) {\r\n            left -= toolboxWidth;\r\n        }\r\n        if (rect.h >= 0) {\r\n            top += this.toolboxMargin;\r\n        } else {\r\n            top = top - toolboxHeight - this.toolboxMargin;\r\n        }\r\n        return {\r\n            left,\r\n            top\r\n        };\r\n    }\r\n\r\n    public cancel = () => {\r\n        this.showToolbox = false;\r\n        this.domprocess.clearCanvasRect(this.interactiveCanvas);\r\n    }\r\n\r\n    public download = () => {\r\n        this.isOpenChange.emit(false);\r\n        window.setTimeout(() => {\r\n            const elementSelector = this.getElementSelector();\r\n            const element = elementSelector[0];\r\n            const options = this.getOptions(element);\r\n            domtoimage\r\n                .toPng(element, options)\r\n                .then(this.domprocess.dataUrlToImage)\r\n                .then((image: HTMLImageElement) => {\r\n                    this.domprocess.remove(image);\r\n                    return this.domprocess.clipImageToCanvas(\r\n                        image,\r\n                        this.rect.startX,\r\n                        this.rect.startY,\r\n                        this.rect.w,\r\n                        this.rect.h\r\n                    );\r\n                })\r\n                .then((canvas: HTMLCanvasElement) => this.domprocess.downloadCanvas(canvas, this.toolboxOptions.filename))\r\n                .then(this.domprocess.remove)\r\n                .catch((error: Error) => console.error(error));\r\n        });\r\n    }\r\n\r\n    private downloadFull = () => {\r\n        this.isOpenChange.emit(false);\r\n        window.setTimeout(() => {\r\n            const elementSelector = this.getElementSelector();\r\n            const element = elementSelector[0];\r\n            const options = this.getOptions(element);\r\n            domtoimage\r\n                .toPng(element, options)\r\n                .then((imageUrl: string) => this.domprocess.downloadByUrl(imageUrl, this.toolboxOptions.filename))\r\n                .catch((error: Error) => console.error(error));\r\n        });\r\n    }\r\n\r\n    private findMaxZindex = (): number => {\r\n        let zMax = 0;\r\n        $('body *').each(function() {\r\n            const zIndexStr: string = $(this).css('zIndex');\r\n            const zIndex: number = parseInt(zIndexStr, 10);\r\n            if (zIndex && zIndex > zMax) {\r\n                zMax = zIndex;\r\n            }\r\n        });\r\n        return zMax;\r\n    }\r\n\r\n    private getElementSelector = (): JQuery<HTMLElement> => {\r\n        return this.target\r\n            ? $(this.target)\r\n            : $(this.container.nativeElement).filter((index: number, element: HTMLElement) => {\r\n                const elementName = element.tagName.toLowerCase();\r\n                return elementName !== 'screenshot-toolbox';\r\n            });\r\n    }\r\n\r\n    private getOptions = (element: HTMLElement) => {\r\n        const boudingClientRect = element.getBoundingClientRect();\r\n        let options = {\r\n            width: boudingClientRect.width,\r\n            height: boudingClientRect.height\r\n        };\r\n        if (this.domprocess.isTransparent(element)) {\r\n            const parentBackgroundColor = this.domprocess.getStyle(element, 'backgroundColor');\r\n            options = Object.assign({}, options, { bgcolor: parentBackgroundColor });\r\n        }\r\n        return options;\r\n    }\r\n\r\n    private setHightLevelZindex = () => {\r\n        const maxZindex = this.findMaxZindex();\r\n        this.hightLevelZindex.second = maxZindex + 1;\r\n        this.hightLevelZindex.top = this.hightLevelZindex.second + 1;\r\n    }\r\n\r\n    private toPng = (callback: (url: string) => void): Promise<string> =>\r\n        new Promise((resolve, reject) => {\r\n            this.isOpenChange.emit(false);\r\n            window.setTimeout(() => {\r\n                const elementSelector = this.getElementSelector();\r\n                const element = elementSelector[0];\r\n                const options = this.getOptions(element);\r\n                return domtoimage\r\n                    .toPng(element, options)\r\n                    .then(this.domprocess.dataUrlToImage)\r\n                    .then((image: HTMLImageElement) => {\r\n                        this.domprocess.remove(image);\r\n                        return this.domprocess.clipImageToCanvas(\r\n                            image,\r\n                            this.rect.startX,\r\n                            this.rect.startY,\r\n                            this.rect.w,\r\n                            this.rect.h\r\n                        );\r\n                    })\r\n                    .then((canvas: HTMLCanvasElement) => {\r\n                        const url = canvas.toDataURL('image/png');\r\n                        if (callback) {\r\n                            callback(url);\r\n                        }\r\n                        resolve(url);\r\n                    })\r\n                    .catch((error: Error) => {\r\n                        console.error(error);\r\n                        reject(error);\r\n                    });\r\n            });\r\n        })\r\n\r\n    public canvasMousedownListener = () => {\r\n        this.showToolbox = false;\r\n    }\r\n\r\n    public canvasMouseupListener = (canvas: HTMLCanvasElement, rect: Rect) => {\r\n        if (rect.w !== 0 && rect.h !== 0) {\r\n            // this.showToolbox = false;\r\n            this.rect = rect;\r\n            const toolbox = $(this.container.nativeElement).find('ng2-screenshot-toolbox');\r\n            console.log(toolbox.outerWidth());\r\n            // console.log(toolbox.width())\r\n            // // const toolbox = $('ng2-screenshot-toolbox');\r\n            const toolboxElement = toolbox.get(0);\r\n            \r\n            console.log(toolboxElement.clientWidth) \r\n            console.log(this.hightLevelZindex)\r\n            /**\r\n             * toolbox position setting\r\n             * because read elememt's width sould indicated postion method, so we set position method first then move location with dom.\r\n             */\r\n            this.domprocess\r\n                .setToolboxStackStyle(toolboxElement, this.hightLevelZindex.top.toString())\r\n                // .then(this.domprocess.appendToBody)\r\n                .then(element => {\r\n                    const position = this.calculateToolboxPosition(\r\n                        canvas.offsetLeft,\r\n                        canvas.offsetTop,\r\n                        rect,\r\n                        element.offsetWidth,\r\n                        element.offsetHeight\r\n                    );\r\n                    return this.domprocess.setToolboxPositionStyle(element, position.left, position.top);\r\n                })\r\n                .then(element => {\r\n                    this.showToolbox = true;\r\n                });\r\n        }\r\n    }\r\n\r\n    public canvasContextmenuListener = () => {\r\n        this.isOpenChange.emit(false);\r\n    }\r\n\r\n    private closeScreenshot = () => {\r\n        this.domprocess.remove(this.interactiveCanvas);\r\n        this.showToolbox = false;\r\n    }\r\n\r\n    private openScreenshot() {\r\n        const elementSelector = this.getElementSelector();\r\n        const boudingClientRect = elementSelector[0].getBoundingClientRect();\r\n        const width = boudingClientRect.width;\r\n        const height = boudingClientRect.height;\r\n        const offset = elementSelector.offset();\r\n        const left = offset.left;\r\n        const top = offset.top;\r\n        this.setHightLevelZindex();\r\n\r\n        this.domprocess\r\n            .createCanvas(width, height)\r\n            .then(canvas =>\r\n                this.domprocess.setCanvasStyle(\r\n                    canvas,\r\n                    left,\r\n                    top,\r\n                    this.colors.gray,\r\n                    this.hightLevelZindex.second.toString()\r\n                )\r\n            )\r\n            .then(this.domprocess.appendToBody)\r\n            .then(canvas =>\r\n                this.domprocess.listenInteractiveCanvas(\r\n                    canvas,\r\n                    this.colors.lightGray,\r\n                    this.canvasMouseupListener,\r\n                    this.canvasMousedownListener,\r\n                    this.canvasContextmenuListener\r\n                )\r\n            )\r\n            .then(canvas => (this.interactiveCanvas = canvas));\r\n    }\r\n\r\n    private resizeCanvas = () => {\r\n        if (!this.interactiveCanvas) {\r\n            return;\r\n        }\r\n        const elementSelector = this.getElementSelector();\r\n        const boudingClientRect = elementSelector[0].getBoundingClientRect();\r\n        const width = boudingClientRect.width;\r\n        const height = boudingClientRect.height;\r\n        const offset = elementSelector.offset();\r\n        const left = offset.left;\r\n        const top = offset.top;\r\n        this.interactiveCanvas.width = width;\r\n        this.interactiveCanvas.height = height;\r\n        this.domprocess\r\n            .setCanvasStyle(\r\n                this.interactiveCanvas,\r\n                left,\r\n                top,\r\n                this.colors.gray,\r\n                this.hightLevelZindex.second.toString()\r\n            )\r\n            .then(() => this.showToolbox = false);\r\n    }\r\n}\r\n","import { Component, ElementRef, ViewChild, AfterViewInit, Inject } from '@angular/core';\r\nimport { ScreenshotComponent } from './screenshot.component';\r\n\r\n/**\r\n * Custom template of screenshot toolbox, connent with screenshot\r\n */\r\n@Component({\r\n    selector: 'ng2-screenshot-toolbox',\r\n    template: `\r\n        <div class=\"screenshot-toolbox\" [hidden]=\"!parent.showToolbox\">\r\n            <div #wrapper>\r\n                <ng-content></ng-content>\r\n            </div>\r\n            <div *ngIf=\"!hasContent\">\r\n                <button class=\"btn\" type=\"button\" (click)=\"cancel()\">\r\n                    Cancel\r\n                </button>\r\n                <button class=\"btn\" type=\"button\" (click)=\"download()\">\r\n                    Download\r\n                </button>\r\n            </div>\r\n        </div>\r\n    `,\r\n    styleUrls: ['./screenshot-toolbox.component.scss']\r\n})\r\nexport class ScreenshotToolboxComponent implements AfterViewInit {\r\n    @ViewChild('wrapper', { static: false }) wrapper: ElementRef;\r\n    hasContent = false;\r\n    constructor(@Inject(ScreenshotComponent) public parent: ScreenshotComponent) {\r\n        // const template = `<div class=\"screenshot-toolbox\">${el.nativeElement.children().html()}</div>`;\r\n        // renderer.selectRootElement(template);\r\n        // el.nativeElement.remove();\r\n    }\r\n\r\n    cancel() {\r\n        this.parent.cancel();\r\n    }\r\n\r\n    download() {\r\n        this.parent.download();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        window.setTimeout(() => {\r\n            this.hasContent = this.wrapper.nativeElement.children.length > 0;\r\n        });\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { ScreenshotComponent } from './screenshot.component';\r\nimport { ScreenshotToolboxComponent } from './screenshot-toolbox.component';\r\nimport { Colors, HightLevelZindex, ToolboxDefaultOptions } from './screenshot.class';\r\nimport { DOMProcess } from './screenshot.utils';\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [ScreenshotComponent, ScreenshotToolboxComponent],\r\n    exports: [ScreenshotComponent, ScreenshotToolboxComponent],\r\n    providers: [Colors, HightLevelZindex, ToolboxDefaultOptions, DOMProcess,  ScreenshotComponent]\r\n})\r\nexport class Ng2ScreenshotModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {ScreenshotToolboxComponent as Éµf} from './lib/screenshot-toolbox.component';\nexport {Colors as Éµc,HightLevelZindex as Éµd,ToolboxDefaultOptions as Éµb} from './lib/screenshot.class';\nexport {ScreenshotComponent as Éµa} from './lib/screenshot.component';\nexport {DOMProcess as Éµe} from './lib/screenshot.utils';"]}